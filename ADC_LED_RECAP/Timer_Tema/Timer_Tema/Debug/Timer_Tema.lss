
Timer_Tema.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000214  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001a0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000012  00800100  00800100  00000214  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000214  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000244  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000058  00000000  00000000  00000284  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000083c  00000000  00000000  000002dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006c6  00000000  00000000  00000b18  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000002e8  00000000  00000000  000011de  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000dc  00000000  00000000  000014c8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003d3  00000000  00000000  000015a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000cb  00000000  00000000  00001977  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  00001a42  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 8a 00 	jmp	0x114	; 0x114 <__vector_21>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a2 31       	cpi	r26, 0x12	; 18
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 6e 00 	call	0xdc	; 0xdc <main>
  88:	0c 94 ce 00 	jmp	0x19c	; 0x19c <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <port_init>:
	while(1);
}


void pinToggle(volatile uint8_t *port, uint8_t pin){
	*port ^=  1 << pin;
  90:	8f ef       	ldi	r24, 0xFF	; 255
  92:	84 b9       	out	0x04, r24	; 4
  94:	15 b8       	out	0x05, r1	; 5
  96:	17 b8       	out	0x07, r1	; 7
  98:	18 b8       	out	0x08, r1	; 8
  9a:	08 95       	ret

0000009c <adc_init>:
  9c:	ac e7       	ldi	r26, 0x7C	; 124
  9e:	b0 e0       	ldi	r27, 0x00	; 0
  a0:	1c 92       	st	X, r1
  a2:	ea e7       	ldi	r30, 0x7A	; 122
  a4:	f0 e0       	ldi	r31, 0x00	; 0
  a6:	10 82       	st	Z, r1
  a8:	8c 91       	ld	r24, X
  aa:	80 64       	ori	r24, 0x40	; 64
  ac:	8c 93       	st	X, r24
  ae:	80 e8       	ldi	r24, 0x80	; 128
  b0:	80 bf       	out	0x30, r24	; 48
  b2:	80 81       	ld	r24, Z
  b4:	88 60       	ori	r24, 0x08	; 8
  b6:	80 83       	st	Z, r24
  b8:	78 94       	sei
  ba:	80 81       	ld	r24, Z
  bc:	87 66       	ori	r24, 0x67	; 103
  be:	80 83       	st	Z, r24
  c0:	80 81       	ld	r24, Z
  c2:	80 68       	ori	r24, 0x80	; 128
  c4:	80 83       	st	Z, r24
  c6:	80 81       	ld	r24, Z
  c8:	80 64       	ori	r24, 0x40	; 64
  ca:	80 83       	st	Z, r24
  cc:	08 95       	ret

000000ce <init_devices>:
  ce:	f8 94       	cli
  d0:	0e 94 48 00 	call	0x90	; 0x90 <port_init>
  d4:	0e 94 4e 00 	call	0x9c	; 0x9c <adc_init>
  d8:	78 94       	sei
  da:	08 95       	ret

000000dc <main>:
  dc:	0e 94 67 00 	call	0xce	; 0xce <init_devices>
  e0:	ff cf       	rjmp	.-2      	; 0xe0 <main+0x4>

000000e2 <pinSet>:
}

void pinSet(volatile uint8_t *port, uint8_t pin){
	*port |=  1 << pin;
  e2:	fc 01       	movw	r30, r24
  e4:	40 81       	ld	r20, Z
  e6:	21 e0       	ldi	r18, 0x01	; 1
  e8:	30 e0       	ldi	r19, 0x00	; 0
  ea:	02 c0       	rjmp	.+4      	; 0xf0 <pinSet+0xe>
  ec:	22 0f       	add	r18, r18
  ee:	33 1f       	adc	r19, r19
  f0:	6a 95       	dec	r22
  f2:	e2 f7       	brpl	.-8      	; 0xec <pinSet+0xa>
  f4:	24 2b       	or	r18, r20
  f6:	20 83       	st	Z, r18
  f8:	08 95       	ret

000000fa <pinReset>:
}

void pinReset(volatile uint8_t *port, uint8_t pin){
  fa:	fc 01       	movw	r30, r24
	*port &=  ~(1 << pin);
  fc:	90 81       	ld	r25, Z
  fe:	21 e0       	ldi	r18, 0x01	; 1
 100:	30 e0       	ldi	r19, 0x00	; 0
 102:	02 c0       	rjmp	.+4      	; 0x108 <pinReset+0xe>
 104:	22 0f       	add	r18, r18
 106:	33 1f       	adc	r19, r19
 108:	6a 95       	dec	r22
 10a:	e2 f7       	brpl	.-8      	; 0x104 <pinReset+0xa>
 10c:	20 95       	com	r18
 10e:	29 23       	and	r18, r25
 110:	20 83       	st	Z, r18
 112:	08 95       	ret

00000114 <__vector_21>:
	ADCSRA |=  (1<<ADEN);
	ADCSRA |= (1<<ADSC);
}

ISR(ADC_vect)
{
 114:	1f 92       	push	r1
 116:	0f 92       	push	r0
 118:	0f b6       	in	r0, 0x3f	; 63
 11a:	0f 92       	push	r0
 11c:	11 24       	eor	r1, r1
 11e:	2f 93       	push	r18
 120:	3f 93       	push	r19
 122:	4f 93       	push	r20
 124:	5f 93       	push	r21
 126:	6f 93       	push	r22
 128:	7f 93       	push	r23
 12a:	8f 93       	push	r24
 12c:	9f 93       	push	r25
 12e:	af 93       	push	r26
 130:	bf 93       	push	r27
 132:	ef 93       	push	r30
 134:	ff 93       	push	r31
	adcValue = ADCL;
 136:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 13a:	28 2f       	mov	r18, r24
 13c:	30 e0       	ldi	r19, 0x00	; 0
 13e:	30 93 11 01 	sts	0x0111, r19	; 0x800111 <adcValue+0x1>
 142:	20 93 10 01 	sts	0x0110, r18	; 0x800110 <adcValue>
	adcValue |= (uint16_t)ADCH<<8;
 146:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
 14a:	89 2f       	mov	r24, r25
 14c:	90 e0       	ldi	r25, 0x00	; 0
 14e:	98 2f       	mov	r25, r24
 150:	88 27       	eor	r24, r24
 152:	82 2b       	or	r24, r18
 154:	93 2b       	or	r25, r19
 156:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <adcValue+0x1>
 15a:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <adcValue>
	if(adcValue > valoare_adc)
 15e:	83 3c       	cpi	r24, 0xC3	; 195
 160:	91 40       	sbci	r25, 0x01	; 1
 162:	30 f0       	brcs	.+12     	; 0x170 <__vector_21+0x5c>
	{
		pinSet(&LED_ADC_PORT, LED_ADC_PIN);
 164:	60 e0       	ldi	r22, 0x00	; 0
 166:	85 e2       	ldi	r24, 0x25	; 37
 168:	90 e0       	ldi	r25, 0x00	; 0
 16a:	0e 94 71 00 	call	0xe2	; 0xe2 <pinSet>
 16e:	05 c0       	rjmp	.+10     	; 0x17a <__vector_21+0x66>
	}
	else {
		pinReset(&LED_ADC_PORT, LED_ADC_PIN);
 170:	60 e0       	ldi	r22, 0x00	; 0
 172:	85 e2       	ldi	r24, 0x25	; 37
 174:	90 e0       	ldi	r25, 0x00	; 0
 176:	0e 94 7d 00 	call	0xfa	; 0xfa <pinReset>
	}

}
 17a:	ff 91       	pop	r31
 17c:	ef 91       	pop	r30
 17e:	bf 91       	pop	r27
 180:	af 91       	pop	r26
 182:	9f 91       	pop	r25
 184:	8f 91       	pop	r24
 186:	7f 91       	pop	r23
 188:	6f 91       	pop	r22
 18a:	5f 91       	pop	r21
 18c:	4f 91       	pop	r20
 18e:	3f 91       	pop	r19
 190:	2f 91       	pop	r18
 192:	0f 90       	pop	r0
 194:	0f be       	out	0x3f, r0	; 63
 196:	0f 90       	pop	r0
 198:	1f 90       	pop	r1
 19a:	18 95       	reti

0000019c <_exit>:
 19c:	f8 94       	cli

0000019e <__stop_program>:
 19e:	ff cf       	rjmp	.-2      	; 0x19e <__stop_program>
