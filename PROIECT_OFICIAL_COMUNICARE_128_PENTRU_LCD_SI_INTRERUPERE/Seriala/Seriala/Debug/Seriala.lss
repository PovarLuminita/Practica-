
Seriala.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800100  0000026e  00000302  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000026e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000016  0080010c  0080010c  0000030e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000030e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000340  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  0000037c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b44  00000000  00000000  00000404  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000088c  00000000  00000000  00000f48  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000443  00000000  00000000  000017d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000134  00000000  00000000  00001c18  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000554  00000000  00000000  00001d4c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000129  00000000  00000000  000022a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000078  00000000  00000000  000023c9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	58 c0       	rjmp	.+176    	; 0xf2 <__vector_16>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	72 c0       	rjmp	.+228    	; 0x15e <__vector_30>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ee e6       	ldi	r30, 0x6E	; 110
  a0:	f2 e0       	ldi	r31, 0x02	; 2
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	ac 30       	cpi	r26, 0x0C	; 12
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	ac e0       	ldi	r26, 0x0C	; 12
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a2 32       	cpi	r26, 0x22	; 34
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	bc d0       	rcall	.+376    	; 0x23c <main>
  c4:	d2 c0       	rjmp	.+420    	; 0x26a <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <initializare_timer0>:
void pinToggle(volatile uint8_t *port, uint8_t pin){
	*port ^=  1 << pin;
}

void pinSet(volatile uint8_t *port, uint8_t pin){
	*port |=  1 << pin;
  c8:	13 be       	out	0x33, r1	; 51
  ca:	83 b7       	in	r24, 0x33	; 51
  cc:	83 bf       	out	0x33, r24	; 51
  ce:	83 b7       	in	r24, 0x33	; 51
  d0:	84 60       	ori	r24, 0x04	; 4
  d2:	83 bf       	out	0x33, r24	; 51
  d4:	11 be       	out	0x31, r1	; 49
  d6:	8c e7       	ldi	r24, 0x7C	; 124
  d8:	81 bf       	out	0x31, r24	; 49
  da:	17 be       	out	0x37, r1	; 55
  dc:	87 b7       	in	r24, 0x37	; 55
  de:	81 60       	ori	r24, 0x01	; 1
  e0:	87 bf       	out	0x37, r24	; 55
  e2:	08 95       	ret

000000e4 <initializare_contor_timp>:
  e4:	86 e4       	ldi	r24, 0x46	; 70
  e6:	90 e0       	ldi	r25, 0x00	; 0
  e8:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <contor_decrementare_timp+0x1>
  ec:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <contor_decrementare_timp>
  f0:	08 95       	ret

000000f2 <__vector_16>:
  f2:	1f 92       	push	r1
  f4:	0f 92       	push	r0
  f6:	0f b6       	in	r0, 0x3f	; 63
  f8:	0f 92       	push	r0
  fa:	11 24       	eor	r1, r1
  fc:	8f 93       	push	r24
  fe:	9f 93       	push	r25
 100:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <contor_decrementare_timp>
 104:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <contor_decrementare_timp+0x1>
 108:	01 97       	sbiw	r24, 0x01	; 1
 10a:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <contor_decrementare_timp+0x1>
 10e:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <contor_decrementare_timp>
 112:	89 2b       	or	r24, r25
 114:	49 f4       	brne	.+18     	; 0x128 <__vector_16+0x36>
 116:	81 e0       	ldi	r24, 0x01	; 1
 118:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <flag_timp>
 11c:	86 e4       	ldi	r24, 0x46	; 70
 11e:	90 e0       	ldi	r25, 0x00	; 0
 120:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <contor_decrementare_timp+0x1>
 124:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <contor_decrementare_timp>
 128:	9f 91       	pop	r25
 12a:	8f 91       	pop	r24
 12c:	0f 90       	pop	r0
 12e:	0f be       	out	0x3f, r0	; 63
 130:	0f 90       	pop	r0
 132:	1f 90       	pop	r1
 134:	18 95       	reti

00000136 <USART_Transmit_caracter>:
 136:	90 91 9b 00 	lds	r25, 0x009B	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
 13a:	95 ff       	sbrs	r25, 5
 13c:	fc cf       	rjmp	.-8      	; 0x136 <USART_Transmit_caracter>
 13e:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
 142:	08 95       	ret

00000144 <USART_Transmit_sir>:
 144:	cf 93       	push	r28
 146:	df 93       	push	r29
 148:	ec 01       	movw	r28, r24
 14a:	02 c0       	rjmp	.+4      	; 0x150 <USART_Transmit_sir+0xc>
 14c:	f4 df       	rcall	.-24     	; 0x136 <USART_Transmit_caracter>
 14e:	21 96       	adiw	r28, 0x01	; 1
 150:	88 81       	ld	r24, Y
 152:	81 11       	cpse	r24, r1
 154:	fb cf       	rjmp	.-10     	; 0x14c <USART_Transmit_sir+0x8>
 156:	ef df       	rcall	.-34     	; 0x136 <USART_Transmit_caracter>
 158:	df 91       	pop	r29
 15a:	cf 91       	pop	r28
 15c:	08 95       	ret

0000015e <__vector_30>:
 15e:	1f 92       	push	r1
 160:	0f 92       	push	r0
 162:	0f b6       	in	r0, 0x3f	; 63
 164:	0f 92       	push	r0
 166:	11 24       	eor	r1, r1
 168:	0b b6       	in	r0, 0x3b	; 59
 16a:	0f 92       	push	r0
 16c:	8f 93       	push	r24
 16e:	9f 93       	push	r25
 170:	ef 93       	push	r30
 172:	ff 93       	push	r31
 174:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <a>
 178:	e8 2f       	mov	r30, r24
 17a:	f0 e0       	ldi	r31, 0x00	; 0
 17c:	90 91 9c 00 	lds	r25, 0x009C	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
 180:	e4 5f       	subi	r30, 0xF4	; 244
 182:	fe 4f       	sbci	r31, 0xFE	; 254
 184:	90 83       	st	Z, r25
 186:	91 11       	cpse	r25, r1
 188:	03 c0       	rjmp	.+6      	; 0x190 <__vector_30+0x32>
 18a:	91 e0       	ldi	r25, 0x01	; 1
 18c:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <flag_rx>
 190:	8f 5f       	subi	r24, 0xFF	; 255
 192:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <a>
 196:	ff 91       	pop	r31
 198:	ef 91       	pop	r30
 19a:	9f 91       	pop	r25
 19c:	8f 91       	pop	r24
 19e:	0f 90       	pop	r0
 1a0:	0b be       	out	0x3b, r0	; 59
 1a2:	0f 90       	pop	r0
 1a4:	0f be       	out	0x3f, r0	; 63
 1a6:	0f 90       	pop	r0
 1a8:	1f 90       	pop	r1
 1aa:	18 95       	reti

000001ac <initializare_porturi>:
 1ac:	8f ef       	ldi	r24, 0xFF	; 255
 1ae:	87 bb       	out	0x17, r24	; 23
 1b0:	18 ba       	out	0x18, r1	; 24
 1b2:	9f e7       	ldi	r25, 0x7F	; 127
 1b4:	94 bb       	out	0x14, r25	; 20
 1b6:	15 ba       	out	0x15, r1	; 21
 1b8:	81 bb       	out	0x11, r24	; 17
 1ba:	12 ba       	out	0x12, r1	; 18
 1bc:	08 95       	ret

000001be <initializare_devices>:
 1be:	f8 94       	cli
 1c0:	f5 df       	rcall	.-22     	; 0x1ac <initializare_porturi>
 1c2:	82 df       	rcall	.-252    	; 0xc8 <initializare_timer0>
 1c4:	78 94       	sei
 1c6:	08 95       	ret

000001c8 <USART_Initializare_registrii>:
 1c8:	90 93 98 00 	sts	0x0098, r25	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
 1cc:	80 93 99 00 	sts	0x0099, r24	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
 1d0:	ea e9       	ldi	r30, 0x9A	; 154
 1d2:	f0 e0       	ldi	r31, 0x00	; 0
 1d4:	80 81       	ld	r24, Z
 1d6:	88 69       	ori	r24, 0x98	; 152
 1d8:	80 83       	st	Z, r24
 1da:	ed e9       	ldi	r30, 0x9D	; 157
 1dc:	f0 e0       	ldi	r31, 0x00	; 0
 1de:	80 81       	ld	r24, Z
 1e0:	86 60       	ori	r24, 0x06	; 6
 1e2:	80 83       	st	Z, r24
 1e4:	85 b7       	in	r24, 0x35	; 53
 1e6:	83 7e       	andi	r24, 0xE3	; 227
 1e8:	85 bf       	out	0x35, r24	; 53
 1ea:	78 94       	sei
 1ec:	08 95       	ret

000001ee <pinToggle>:
 1ee:	fc 01       	movw	r30, r24
 1f0:	40 81       	ld	r20, Z
 1f2:	21 e0       	ldi	r18, 0x01	; 1
 1f4:	30 e0       	ldi	r19, 0x00	; 0
 1f6:	02 c0       	rjmp	.+4      	; 0x1fc <pinToggle+0xe>
 1f8:	22 0f       	add	r18, r18
 1fa:	33 1f       	adc	r19, r19
 1fc:	6a 95       	dec	r22
 1fe:	e2 f7       	brpl	.-8      	; 0x1f8 <pinToggle+0xa>
 200:	24 27       	eor	r18, r20
 202:	20 83       	st	Z, r18
 204:	08 95       	ret

00000206 <verificare_led_primire_caracter>:
 206:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <flag_timp>
 20a:	81 30       	cpi	r24, 0x01	; 1
 20c:	49 f4       	brne	.+18     	; 0x220 <verificare_led_primire_caracter+0x1a>
 20e:	80 e0       	ldi	r24, 0x00	; 0
 210:	91 e0       	ldi	r25, 0x01	; 1
 212:	98 df       	rcall	.-208    	; 0x144 <USART_Transmit_sir>
 214:	60 e0       	ldi	r22, 0x00	; 0
 216:	88 e3       	ldi	r24, 0x38	; 56
 218:	90 e0       	ldi	r25, 0x00	; 0
 21a:	e9 df       	rcall	.-46     	; 0x1ee <pinToggle>
 21c:	10 92 1e 01 	sts	0x011E, r1	; 0x80011e <flag_timp>
 220:	08 95       	ret

00000222 <pinReset>:
}

void pinReset(volatile uint8_t *port, uint8_t pin){
 222:	fc 01       	movw	r30, r24
	*port &=  ~(1 << pin);
 224:	90 81       	ld	r25, Z
 226:	21 e0       	ldi	r18, 0x01	; 1
 228:	30 e0       	ldi	r19, 0x00	; 0
 22a:	02 c0       	rjmp	.+4      	; 0x230 <pinReset+0xe>
 22c:	22 0f       	add	r18, r18
 22e:	33 1f       	adc	r19, r19
 230:	6a 95       	dec	r22
 232:	e2 f7       	brpl	.-8      	; 0x22c <pinReset+0xa>
 234:	20 95       	com	r18
 236:	29 23       	and	r18, r25
 238:	20 83       	st	Z, r18
 23a:	08 95       	ret

0000023c <main>:

///--------------------------------- COD --------------------------------------

int main(void)
{
	initializare_contor_timp();
 23c:	53 df       	rcall	.-346    	; 0xe4 <initializare_contor_timp>
	initializare_devices();
 23e:	bf df       	rcall	.-130    	; 0x1be <initializare_devices>
 240:	87 e6       	ldi	r24, 0x67	; 103
	USART_Initializare_registrii(MYUBRR);
 242:	90 e0       	ldi	r25, 0x00	; 0
 244:	c1 df       	rcall	.-126    	; 0x1c8 <USART_Initializare_registrii>
 246:	61 e0       	ldi	r22, 0x01	; 1
	pinReset(&PORT_LED_RX,PIN_LED_RX);
 248:	88 e3       	ldi	r24, 0x38	; 56
 24a:	90 e0       	ldi	r25, 0x00	; 0
 24c:	ea df       	rcall	.-44     	; 0x222 <pinReset>
	do{
		verificare_led_primire_caracter();	
 24e:	db df       	rcall	.-74     	; 0x206 <verificare_led_primire_caracter>
 250:	80 91 1d 01 	lds	r24, 0x011D	; 0x80011d <flag_rx>
	//	Receive_Buffer(buffer);
	if(flag_rx == 1){
 254:	81 30       	cpi	r24, 0x01	; 1
 256:	d9 f7       	brne	.-10     	; 0x24e <main+0x12>
		pinToggle(&PORT_LED_RX, PIN_LED_RX);
 258:	61 e0       	ldi	r22, 0x01	; 1
 25a:	88 e3       	ldi	r24, 0x38	; 56
 25c:	90 e0       	ldi	r25, 0x00	; 0
 25e:	c7 df       	rcall	.-114    	; 0x1ee <pinToggle>
 260:	10 92 1d 01 	sts	0x011D, r1	; 0x80011d <flag_rx>
		flag_rx = 0;
 264:	10 92 1c 01 	sts	0x011C, r1	; 0x80011c <a>
		a = 0;
 268:	f2 cf       	rjmp	.-28     	; 0x24e <main+0x12>

0000026a <_exit>:
 26a:	f8 94       	cli

0000026c <__stop_program>:
 26c:	ff cf       	rjmp	.-2      	; 0x26c <__stop_program>
