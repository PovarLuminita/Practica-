
Tema3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000016c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000118  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000016c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000019c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000048  00000000  00000000  000001dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000730  00000000  00000000  00000224  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000067b  00000000  00000000  00000954  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000292  00000000  00000000  00000fcf  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000094  00000000  00000000  00001264  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000389  00000000  00000000  000012f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000078  00000000  00000000  00001681  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000038  00000000  00000000  000016f9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 40 00 	jmp	0x80	; 0x80 <__vector_1>
   8:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__vector_2>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 85 00 	call	0x10a	; 0x10a <main>
  78:	0c 94 8a 00 	jmp	0x114	; 0x114 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <__vector_1>:
#define BUTTON1_PIN  PIND3
#define BUTTON2_PORT PORTD
#define BUTTON2_PIN PIND2

ISR(INT0_vect)
{
  80:	1f 92       	push	r1
  82:	0f 92       	push	r0
  84:	0f b6       	in	r0, 0x3f	; 63
  86:	0f 92       	push	r0
  88:	11 24       	eor	r1, r1
  8a:	8f 93       	push	r24
	PORT_LED0 |= (1 << PIN_LED0);
  8c:	8b b1       	in	r24, 0x0b	; 11
  8e:	80 61       	ori	r24, 0x10	; 16
  90:	8b b9       	out	0x0b, r24	; 11
	PORT_LED1 |= (1 << PIN_LED1);
  92:	8b b1       	in	r24, 0x0b	; 11
  94:	80 62       	ori	r24, 0x20	; 32
  96:	8b b9       	out	0x0b, r24	; 11
	PORT_LED2 |= (1 << PIN_LED2);
  98:	8b b1       	in	r24, 0x0b	; 11
  9a:	80 64       	ori	r24, 0x40	; 64
  9c:	8b b9       	out	0x0b, r24	; 11
	PORT_LED3 |= (1 << PIN_LED3);
  9e:	8b b1       	in	r24, 0x0b	; 11
  a0:	80 68       	ori	r24, 0x80	; 128
  a2:	8b b9       	out	0x0b, r24	; 11
}
  a4:	8f 91       	pop	r24
  a6:	0f 90       	pop	r0
  a8:	0f be       	out	0x3f, r0	; 63
  aa:	0f 90       	pop	r0
  ac:	1f 90       	pop	r1
  ae:	18 95       	reti

000000b0 <__vector_2>:


ISR(INT1_vect)
{
  b0:	1f 92       	push	r1
  b2:	0f 92       	push	r0
  b4:	0f b6       	in	r0, 0x3f	; 63
  b6:	0f 92       	push	r0
  b8:	11 24       	eor	r1, r1
  ba:	8f 93       	push	r24
	PORT_LED0 &= ~(1 << PIN_LED0);
  bc:	8b b1       	in	r24, 0x0b	; 11
  be:	8f 7e       	andi	r24, 0xEF	; 239
  c0:	8b b9       	out	0x0b, r24	; 11
	PORT_LED1 &= ~(1 << PIN_LED1);
  c2:	8b b1       	in	r24, 0x0b	; 11
  c4:	8f 7d       	andi	r24, 0xDF	; 223
  c6:	8b b9       	out	0x0b, r24	; 11
	PORT_LED2 &= ~(1 << PIN_LED2);
  c8:	8b b1       	in	r24, 0x0b	; 11
  ca:	8f 7b       	andi	r24, 0xBF	; 191
  cc:	8b b9       	out	0x0b, r24	; 11
	PORT_LED3 &= ~(1 << PIN_LED3);
  ce:	8b b1       	in	r24, 0x0b	; 11
  d0:	8f 77       	andi	r24, 0x7F	; 127
  d2:	8b b9       	out	0x0b, r24	; 11
}
  d4:	8f 91       	pop	r24
  d6:	0f 90       	pop	r0
  d8:	0f be       	out	0x3f, r0	; 63
  da:	0f 90       	pop	r0
  dc:	1f 90       	pop	r1
  de:	18 95       	reti

000000e0 <init_intr>:
}


void init_intr()
{
	EICRA |= (1 << ISC11) | (0 << ISC10) | (1 << ISC01) | (1 << ISC00); //masca pt butoane 00001100 // rising - cand iei degetul
  e0:	e9 e6       	ldi	r30, 0x69	; 105
  e2:	f0 e0       	ldi	r31, 0x00	; 0
  e4:	80 81       	ld	r24, Z
  e6:	8b 60       	ori	r24, 0x0B	; 11
  e8:	80 83       	st	Z, r24
	EIMSK |= (1 << INT0);                                                                           // falling - imd cum apesi
  ea:	8d b3       	in	r24, 0x1d	; 29
  ec:	81 60       	ori	r24, 0x01	; 1
  ee:	8d bb       	out	0x1d, r24	; 29
	EIMSK |= (1 << INT1);
  f0:	8d b3       	in	r24, 0x1d	; 29
  f2:	82 60       	ori	r24, 0x02	; 2
  f4:	8d bb       	out	0x1d, r24	; 29
	sei();
  f6:	78 94       	sei
  f8:	08 95       	ret

000000fa <port_init>:
}

void port_init(void)
{
	DDRD = 0xF3; 
  fa:	83 ef       	ldi	r24, 0xF3	; 243
  fc:	8a b9       	out	0x0a, r24	; 10
	PORTD = 0x0C;
  fe:	8c e0       	ldi	r24, 0x0C	; 12
 100:	8b b9       	out	0x0b, r24	; 11
 102:	08 95       	ret

00000104 <init_devices>:
}

void init_devices(void)
{
	port_init();
 104:	0e 94 7d 00 	call	0xfa	; 0xfa <port_init>
 108:	08 95       	ret

0000010a <main>:
	PORT_LED3 &= ~(1 << PIN_LED3);
}

int main(void)
{
	init_devices(); //off
 10a:	0e 94 82 00 	call	0x104	; 0x104 <init_devices>
	init_intr(); 
 10e:	0e 94 70 00 	call	0xe0	; 0xe0 <init_intr>
 112:	ff cf       	rjmp	.-2      	; 0x112 <main+0x8>

00000114 <_exit>:
 114:	f8 94       	cli

00000116 <__stop_program>:
 116:	ff cf       	rjmp	.-2      	; 0x116 <__stop_program>
