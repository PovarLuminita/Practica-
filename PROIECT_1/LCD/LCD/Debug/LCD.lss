
LCD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000018  00800100  00000994  00000a28  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000994  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000017  00800118  00800118  00000a40  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000a40  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000a9c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a8  00000000  00000000  00000adc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000106c  00000000  00000000  00000b84  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000963  00000000  00000000  00001bf0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000076f  00000000  00000000  00002553  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000134  00000000  00000000  00002cc4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004e7  00000000  00000000  00002df8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000005ba  00000000  00000000  000032df  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000078  00000000  00000000  00003899  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 80 00 	jmp	0x100	; 0x100 <__vector_14>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e4 e9       	ldi	r30, 0x94	; 148
  7c:	f9 e0       	ldi	r31, 0x09	; 9
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a8 31       	cpi	r26, 0x18	; 24
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a8 e1       	ldi	r26, 0x18	; 24
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	af 32       	cpi	r26, 0x2F	; 47
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 53 00 	call	0xa6	; 0xa6 <main>
  9e:	0c 94 c8 04 	jmp	0x990	; 0x990 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <main>:
  a6:	10 92 19 01 	sts	0x0119, r1	; 0x800119 <sec_1>
  aa:	10 92 18 01 	sts	0x0118, r1	; 0x800118 <__data_end>
  ae:	10 92 2e 01 	sts	0x012E, r1	; 0x80012e <h_1>
  b2:	0e 94 dd 00 	call	0x1ba	; 0x1ba <initialize>
  b6:	0e 94 c1 01 	call	0x382	; 0x382 <init_data_contor>
  ba:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <init_timer>
  be:	0e 94 0e 01 	call	0x21c	; 0x21c <lcd_clear>
  c2:	0e 94 60 01 	call	0x2c0	; 0x2c0 <lcd_setCursor>
  c6:	80 e0       	ldi	r24, 0x00	; 0
  c8:	91 e0       	ldi	r25, 0x01	; 1
  ca:	0e 94 1b 01 	call	0x236	; 0x236 <lcd_print>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ce:	2f ef       	ldi	r18, 0xFF	; 255
  d0:	87 ea       	ldi	r24, 0xA7	; 167
  d2:	91 e6       	ldi	r25, 0x61	; 97
  d4:	21 50       	subi	r18, 0x01	; 1
  d6:	80 40       	sbci	r24, 0x00	; 0
  d8:	90 40       	sbci	r25, 0x00	; 0
  da:	e1 f7       	brne	.-8      	; 0xd4 <main+0x2e>
  dc:	00 c0       	rjmp	.+0      	; 0xde <main+0x38>
  de:	00 00       	nop
  e0:	0e 94 0e 01 	call	0x21c	; 0x21c <lcd_clear>
  e4:	0e 94 60 01 	call	0x2c0	; 0x2c0 <lcd_setCursor>
  e8:	2f ef       	ldi	r18, 0xFF	; 255
  ea:	87 ea       	ldi	r24, 0xA7	; 167
  ec:	91 e6       	ldi	r25, 0x61	; 97
  ee:	21 50       	subi	r18, 0x01	; 1
  f0:	80 40       	sbci	r24, 0x00	; 0
  f2:	90 40       	sbci	r25, 0x00	; 0
  f4:	e1 f7       	brne	.-8      	; 0xee <main+0x48>
  f6:	00 c0       	rjmp	.+0      	; 0xf8 <main+0x52>
  f8:	00 00       	nop
  fa:	0e 94 6d 01 	call	0x2da	; 0x2da <afiseaza>
  fe:	fd cf       	rjmp	.-6      	; 0xfa <main+0x54>

00000100 <__vector_14>:
void init_data(void){
	contor_sec_1 = timp_sec_1;
}

//intrerupere
ISR(TIMER0_COMPA_vect){
 100:	1f 92       	push	r1
 102:	0f 92       	push	r0
 104:	0f b6       	in	r0, 0x3f	; 63
 106:	0f 92       	push	r0
 108:	11 24       	eor	r1, r1
 10a:	8f 93       	push	r24
 10c:	9f 93       	push	r25
	contor_sec_1--;
 10e:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <contor_sec_1>
 112:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <contor_sec_1+0x1>
 116:	01 97       	sbiw	r24, 0x01	; 1
 118:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <contor_sec_1+0x1>
 11c:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <contor_sec_1>
	
	if(contor_sec_1 == 0){
 120:	89 2b       	or	r24, r25
 122:	89 f4       	brne	.+34     	; 0x146 <__vector_14+0x46>
		flag1 = 1;
 124:	81 e0       	ldi	r24, 0x01	; 1
 126:	90 e0       	ldi	r25, 0x00	; 0
 128:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <flag1+0x1>
 12c:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <flag1>
		
		sec_1++;
 130:	80 91 19 01 	lds	r24, 0x0119	; 0x800119 <sec_1>
 134:	8f 5f       	subi	r24, 0xFF	; 255
 136:	80 93 19 01 	sts	0x0119, r24	; 0x800119 <sec_1>
// 		if(h_1==24){
// 			h_1=0;
// 			min_1=0;
// 		sec_1=0;}
		
		contor_sec_1 = timp_sec_1;
 13a:	88 ee       	ldi	r24, 0xE8	; 232
 13c:	93 e0       	ldi	r25, 0x03	; 3
 13e:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <contor_sec_1+0x1>
 142:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <contor_sec_1>
	}
}
 146:	9f 91       	pop	r25
 148:	8f 91       	pop	r24
 14a:	0f 90       	pop	r0
 14c:	0f be       	out	0x3f, r0	; 63
 14e:	0f 90       	pop	r0
 150:	1f 90       	pop	r1
 152:	18 95       	reti

00000154 <lcd_command>:
}

//pentru a trimite comenzi catre lcd
void lcd_command( unsigned char cmnd )
{
	lcd_port_pin = (lcd_port_pin & 0x0F) | (cmnd & 0xF0);
 154:	9b b1       	in	r25, 0x0b	; 11
 156:	9f 70       	andi	r25, 0x0F	; 15
 158:	28 2f       	mov	r18, r24
 15a:	20 7f       	andi	r18, 0xF0	; 240
 15c:	92 2b       	or	r25, r18
 15e:	9b b9       	out	0x0b, r25	; 11
	lcd_port &= ~ (1<<rs);
 160:	98 b1       	in	r25, 0x08	; 8
 162:	9d 7f       	andi	r25, 0xFD	; 253
 164:	98 b9       	out	0x08, r25	; 8
	lcd_port|= (1<<en);
 166:	98 b1       	in	r25, 0x08	; 8
 168:	94 60       	ori	r25, 0x04	; 4
 16a:	98 b9       	out	0x08, r25	; 8
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 16c:	35 e0       	ldi	r19, 0x05	; 5
 16e:	3a 95       	dec	r19
 170:	f1 f7       	brne	.-4      	; 0x16e <lcd_command+0x1a>
 172:	00 00       	nop
	_delay_us(1);
	//lcd_port &= ~ (1<<en);
	//_delay_us(200);
	lcd_port &= ~ (1<<en);
 174:	98 b1       	in	r25, 0x08	; 8
 176:	9b 7f       	andi	r25, 0xFB	; 251
 178:	98 b9       	out	0x08, r25	; 8
 17a:	ef e1       	ldi	r30, 0x1F	; 31
 17c:	f3 e0       	ldi	r31, 0x03	; 3
 17e:	31 97       	sbiw	r30, 0x01	; 1
 180:	f1 f7       	brne	.-4      	; 0x17e <lcd_command+0x2a>
 182:	00 c0       	rjmp	.+0      	; 0x184 <lcd_command+0x30>
 184:	00 00       	nop
	_delay_us(200);
	lcd_port_pin = (lcd_port_pin & 0x0F) | (cmnd << 4);
 186:	2b b1       	in	r18, 0x0b	; 11
 188:	f0 e1       	ldi	r31, 0x10	; 16
 18a:	8f 9f       	mul	r24, r31
 18c:	c0 01       	movw	r24, r0
 18e:	11 24       	eor	r1, r1
 190:	92 2f       	mov	r25, r18
 192:	9f 70       	andi	r25, 0x0F	; 15
 194:	89 2b       	or	r24, r25
 196:	8b b9       	out	0x0b, r24	; 11
	lcd_port|= (1<<en);
 198:	88 b1       	in	r24, 0x08	; 8
 19a:	84 60       	ori	r24, 0x04	; 4
 19c:	88 b9       	out	0x08, r24	; 8
 19e:	35 e0       	ldi	r19, 0x05	; 5
 1a0:	3a 95       	dec	r19
 1a2:	f1 f7       	brne	.-4      	; 0x1a0 <lcd_command+0x4c>
 1a4:	00 00       	nop
	_delay_us(1);
	lcd_port &= ~ (1<<en);
 1a6:	88 b1       	in	r24, 0x08	; 8
 1a8:	8b 7f       	andi	r24, 0xFB	; 251
 1aa:	88 b9       	out	0x08, r24	; 8
 1ac:	8f e1       	ldi	r24, 0x1F	; 31
 1ae:	93 e0       	ldi	r25, 0x03	; 3
 1b0:	01 97       	sbiw	r24, 0x01	; 1
 1b2:	f1 f7       	brne	.-4      	; 0x1b0 <lcd_command+0x5c>
 1b4:	00 c0       	rjmp	.+0      	; 0x1b6 <lcd_command+0x62>
 1b6:	00 00       	nop
 1b8:	08 95       	ret

000001ba <initialize>:


//initializare lcd
void initialize (void)
{
	lcd_data_dir = 0xFF;	//pin D4-D7
 1ba:	8f ef       	ldi	r24, 0xFF	; 255
 1bc:	87 b9       	out	0x07, r24	; 7
	lcd_pin_dir = 0xFF;
 1be:	8a b9       	out	0x0a, r24	; 10
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1c0:	8f e5       	ldi	r24, 0x5F	; 95
 1c2:	9a ee       	ldi	r25, 0xEA	; 234
 1c4:	01 97       	sbiw	r24, 0x01	; 1
 1c6:	f1 f7       	brne	.-4      	; 0x1c4 <initialize+0xa>
 1c8:	00 c0       	rjmp	.+0      	; 0x1ca <initialize+0x10>
 1ca:	00 00       	nop
	_delay_ms(15);
	lcd_command((1<<4)|(1<<5));
 1cc:	80 e3       	ldi	r24, 0x30	; 48
 1ce:	0e 94 aa 00 	call	0x154	; 0x154 <lcd_command>
 1d2:	8f e1       	ldi	r24, 0x1F	; 31
 1d4:	9e e4       	ldi	r25, 0x4E	; 78
 1d6:	01 97       	sbiw	r24, 0x01	; 1
 1d8:	f1 f7       	brne	.-4      	; 0x1d6 <initialize+0x1c>
 1da:	00 c0       	rjmp	.+0      	; 0x1dc <initialize+0x22>
 1dc:	00 00       	nop
	
	_delay_ms(5);
	lcd_command((1<<4)|(1<<5));
 1de:	80 e3       	ldi	r24, 0x30	; 48
 1e0:	0e 94 aa 00 	call	0x154	; 0x154 <lcd_command>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1e4:	87 e5       	ldi	r24, 0x57	; 87
 1e6:	92 e0       	ldi	r25, 0x02	; 2
 1e8:	01 97       	sbiw	r24, 0x01	; 1
 1ea:	f1 f7       	brne	.-4      	; 0x1e8 <initialize+0x2e>
 1ec:	00 c0       	rjmp	.+0      	; 0x1ee <initialize+0x34>
 1ee:	00 00       	nop
	
	_delay_us(150);
	lcd_command((1<<4)|(1<<5));
 1f0:	80 e3       	ldi	r24, 0x30	; 48
 1f2:	0e 94 aa 00 	call	0x154	; 0x154 <lcd_command>
	
	lcd_command(0x02);
 1f6:	82 e0       	ldi	r24, 0x02	; 2
 1f8:	0e 94 aa 00 	call	0x154	; 0x154 <lcd_command>
	lcd_command(0x28);
 1fc:	88 e2       	ldi	r24, 0x28	; 40
 1fe:	0e 94 aa 00 	call	0x154	; 0x154 <lcd_command>
	lcd_command(0x01);
 202:	81 e0       	ldi	r24, 0x01	; 1
 204:	0e 94 aa 00 	call	0x154	; 0x154 <lcd_command>
	
	lcd_command(1<<3);
 208:	88 e0       	ldi	r24, 0x08	; 8
 20a:	0e 94 aa 00 	call	0x154	; 0x154 <lcd_command>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 20e:	8f e3       	ldi	r24, 0x3F	; 63
 210:	9f e1       	ldi	r25, 0x1F	; 31
 212:	01 97       	sbiw	r24, 0x01	; 1
 214:	f1 f7       	brne	.-4      	; 0x212 <initialize+0x58>
 216:	00 c0       	rjmp	.+0      	; 0x218 <initialize+0x5e>
 218:	00 00       	nop
 21a:	08 95       	ret

0000021c <lcd_clear>:


//clear lcd
void lcd_clear()
{
	lcd_command (0x01);		//clear LCD
 21c:	81 e0       	ldi	r24, 0x01	; 1
 21e:	0e 94 aa 00 	call	0x154	; 0x154 <lcd_command>
 222:	8f e3       	ldi	r24, 0x3F	; 63
 224:	9f e1       	ldi	r25, 0x1F	; 31
 226:	01 97       	sbiw	r24, 0x01	; 1
 228:	f1 f7       	brne	.-4      	; 0x226 <lcd_clear+0xa>
 22a:	00 c0       	rjmp	.+0      	; 0x22c <lcd_clear+0x10>
 22c:	00 00       	nop
	_delay_ms(2);
	lcd_command (0x80);		//muta la linia 1, pozitia 1
 22e:	80 e8       	ldi	r24, 0x80	; 128
 230:	0e 94 aa 00 	call	0x154	; 0x154 <lcd_command>
 234:	08 95       	ret

00000236 <lcd_print>:
}

//afisare lcd
void lcd_print (char *str)
{
 236:	fc 01       	movw	r30, r24
	int i;
	for(i=0; str[i]!=0; i++)
 238:	60 e0       	ldi	r22, 0x00	; 0
 23a:	70 e0       	ldi	r23, 0x00	; 0
 23c:	3a c0       	rjmp	.+116    	; 0x2b2 <lcd_print+0x7c>
	{
		lcd_port_pin = (lcd_port_pin & 0x0F) | (str[i] & 0xF0);
 23e:	8b b1       	in	r24, 0x0b	; 11
 240:	8f 70       	andi	r24, 0x0F	; 15
 242:	90 7f       	andi	r25, 0xF0	; 240
 244:	98 2b       	or	r25, r24
 246:	9b b9       	out	0x0b, r25	; 11
		lcd_port |= (1<<rs);
 248:	88 b1       	in	r24, 0x08	; 8
 24a:	82 60       	ori	r24, 0x02	; 2
 24c:	88 b9       	out	0x08, r24	; 8
		lcd_port|= (1<<en);
 24e:	88 b1       	in	r24, 0x08	; 8
 250:	84 60       	ori	r24, 0x04	; 4
 252:	88 b9       	out	0x08, r24	; 8
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 254:	85 e0       	ldi	r24, 0x05	; 5
 256:	8a 95       	dec	r24
 258:	f1 f7       	brne	.-4      	; 0x256 <lcd_print+0x20>
 25a:	00 00       	nop
 25c:	8f e1       	ldi	r24, 0x1F	; 31
 25e:	93 e0       	ldi	r25, 0x03	; 3
 260:	01 97       	sbiw	r24, 0x01	; 1
 262:	f1 f7       	brne	.-4      	; 0x260 <lcd_print+0x2a>
 264:	00 c0       	rjmp	.+0      	; 0x266 <lcd_print+0x30>
 266:	00 00       	nop
		_delay_us(1);
		_delay_us(200);
		lcd_port &= ~ (1<<en);
 268:	88 b1       	in	r24, 0x08	; 8
 26a:	8b 7f       	andi	r24, 0xFB	; 251
 26c:	88 b9       	out	0x08, r24	; 8
 26e:	8f e1       	ldi	r24, 0x1F	; 31
 270:	93 e0       	ldi	r25, 0x03	; 3
 272:	01 97       	sbiw	r24, 0x01	; 1
 274:	f1 f7       	brne	.-4      	; 0x272 <lcd_print+0x3c>
 276:	00 c0       	rjmp	.+0      	; 0x278 <lcd_print+0x42>
 278:	00 00       	nop
		_delay_us(200);
		lcd_port_pin = (lcd_port_pin & 0x0F) | (str[i] << 4);
 27a:	4b b1       	in	r20, 0x0b	; 11
 27c:	9c 91       	ld	r25, X
 27e:	80 e1       	ldi	r24, 0x10	; 16
 280:	98 9f       	mul	r25, r24
 282:	90 01       	movw	r18, r0
 284:	11 24       	eor	r1, r1
 286:	94 2f       	mov	r25, r20
 288:	9f 70       	andi	r25, 0x0F	; 15
 28a:	29 2b       	or	r18, r25
 28c:	2b b9       	out	0x0b, r18	; 11
		lcd_port |= (1<<en);
 28e:	98 b1       	in	r25, 0x08	; 8
 290:	94 60       	ori	r25, 0x04	; 4
 292:	98 b9       	out	0x08, r25	; 8
 294:	95 e0       	ldi	r25, 0x05	; 5
 296:	9a 95       	dec	r25
 298:	f1 f7       	brne	.-4      	; 0x296 <lcd_print+0x60>
 29a:	00 00       	nop
		_delay_us(1);
		lcd_port &= ~ (1<<en);
 29c:	98 b1       	in	r25, 0x08	; 8
 29e:	9b 7f       	andi	r25, 0xFB	; 251
 2a0:	98 b9       	out	0x08, r25	; 8
 2a2:	8f e1       	ldi	r24, 0x1F	; 31
 2a4:	93 e0       	ldi	r25, 0x03	; 3
 2a6:	01 97       	sbiw	r24, 0x01	; 1
 2a8:	f1 f7       	brne	.-4      	; 0x2a6 <lcd_print+0x70>
 2aa:	00 c0       	rjmp	.+0      	; 0x2ac <lcd_print+0x76>
 2ac:	00 00       	nop

//afisare lcd
void lcd_print (char *str)
{
	int i;
	for(i=0; str[i]!=0; i++)
 2ae:	6f 5f       	subi	r22, 0xFF	; 255
 2b0:	7f 4f       	sbci	r23, 0xFF	; 255
 2b2:	df 01       	movw	r26, r30
 2b4:	a6 0f       	add	r26, r22
 2b6:	b7 1f       	adc	r27, r23
 2b8:	9c 91       	ld	r25, X
 2ba:	91 11       	cpse	r25, r1
 2bc:	c0 cf       	rjmp	.-128    	; 0x23e <lcd_print+0x8>
		lcd_port |= (1<<en);
		_delay_us(1);
		lcd_port &= ~ (1<<en);
		_delay_us(200);
	}
}
 2be:	08 95       	ret

000002c0 <lcd_setCursor>:

void lcd_setCursor()
{
	
	
	lcd_command(1<<1); //return home
 2c0:	82 e0       	ldi	r24, 0x02	; 2
 2c2:	0e 94 aa 00 	call	0x154	; 0x154 <lcd_command>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2c6:	2f ef       	ldi	r18, 0xFF	; 255
 2c8:	89 ef       	ldi	r24, 0xF9	; 249
 2ca:	90 e0       	ldi	r25, 0x00	; 0
 2cc:	21 50       	subi	r18, 0x01	; 1
 2ce:	80 40       	sbci	r24, 0x00	; 0
 2d0:	90 40       	sbci	r25, 0x00	; 0
 2d2:	e1 f7       	brne	.-8      	; 0x2cc <lcd_setCursor+0xc>
 2d4:	00 c0       	rjmp	.+0      	; 0x2d6 <lcd_setCursor+0x16>
 2d6:	00 00       	nop
 2d8:	08 95       	ret

000002da <afiseaza>:

//functie care afiseaza pe lcd secundele
void afiseaza()
{
	
	if(flag1 == 1 )
 2da:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <flag1>
 2de:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <flag1+0x1>
 2e2:	01 97       	sbiw	r24, 0x01	; 1
 2e4:	09 f0       	breq	.+2      	; 0x2e8 <afiseaza+0xe>
 2e6:	4c c0       	rjmp	.+152    	; 0x380 <afiseaza+0xa6>
	{
		lcd_clear();
 2e8:	0e 94 0e 01 	call	0x21c	; 0x21c <lcd_clear>
		lcd_setCursor();
 2ec:	0e 94 60 01 	call	0x2c0	; 0x2c0 <lcd_setCursor>
		
		if(sec_1 ==60){
 2f0:	80 91 19 01 	lds	r24, 0x0119	; 0x800119 <sec_1>
 2f4:	8c 33       	cpi	r24, 0x3C	; 60
 2f6:	39 f4       	brne	.+14     	; 0x306 <afiseaza+0x2c>
			min_1++;
 2f8:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 2fc:	8f 5f       	subi	r24, 0xFF	; 255
 2fe:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
			sec_1 = 0;
 302:	10 92 19 01 	sts	0x0119, r1	; 0x800119 <sec_1>
		}
		if(min_1==60){
 306:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 30a:	8c 33       	cpi	r24, 0x3C	; 60
 30c:	49 f4       	brne	.+18     	; 0x320 <afiseaza+0x46>
			min_1=0;
 30e:	10 92 18 01 	sts	0x0118, r1	; 0x800118 <__data_end>
			sec_1=0;
 312:	10 92 19 01 	sts	0x0119, r1	; 0x800119 <sec_1>
			h_1++;
 316:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <h_1>
 31a:	8f 5f       	subi	r24, 0xFF	; 255
 31c:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <h_1>
		}
		if(h_1==24){
 320:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <h_1>
 324:	88 31       	cpi	r24, 0x18	; 24
 326:	31 f4       	brne	.+12     	; 0x334 <afiseaza+0x5a>
			h_1=0;
 328:	10 92 2e 01 	sts	0x012E, r1	; 0x80012e <h_1>
			min_1=0;
 32c:	10 92 18 01 	sts	0x0118, r1	; 0x800118 <__data_end>
		sec_1=0;}
 330:	10 92 19 01 	sts	0x0119, r1	; 0x800119 <sec_1>
		sprintf(buffer, "ORA %d:%d:%d  ", h_1, min_1, sec_1);
 334:	80 91 19 01 	lds	r24, 0x0119	; 0x800119 <sec_1>
 338:	1f 92       	push	r1
 33a:	8f 93       	push	r24
 33c:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 340:	1f 92       	push	r1
 342:	8f 93       	push	r24
 344:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <h_1>
 348:	1f 92       	push	r1
 34a:	8f 93       	push	r24
 34c:	89 e0       	ldi	r24, 0x09	; 9
 34e:	91 e0       	ldi	r25, 0x01	; 1
 350:	9f 93       	push	r25
 352:	8f 93       	push	r24
 354:	8e e1       	ldi	r24, 0x1E	; 30
 356:	91 e0       	ldi	r25, 0x01	; 1
 358:	9f 93       	push	r25
 35a:	8f 93       	push	r24
 35c:	0e 94 de 01 	call	0x3bc	; 0x3bc <sprintf>
		lcd_print(buffer);
 360:	8e e1       	ldi	r24, 0x1E	; 30
 362:	91 e0       	ldi	r25, 0x01	; 1
 364:	0e 94 1b 01 	call	0x236	; 0x236 <lcd_print>
		
		flag1 = 0;
 368:	10 92 1d 01 	sts	0x011D, r1	; 0x80011d <flag1+0x1>
 36c:	10 92 1c 01 	sts	0x011C, r1	; 0x80011c <flag1>
 370:	8d b7       	in	r24, 0x3d	; 61
 372:	9e b7       	in	r25, 0x3e	; 62
 374:	0a 96       	adiw	r24, 0x0a	; 10
 376:	0f b6       	in	r0, 0x3f	; 63
 378:	f8 94       	cli
 37a:	9e bf       	out	0x3e, r25	; 62
 37c:	0f be       	out	0x3f, r0	; 63
 37e:	8d bf       	out	0x3d, r24	; 61
 380:	08 95       	ret

00000382 <init_data_contor>:
 382:	8f ef       	ldi	r24, 0xFF	; 255
 384:	87 b9       	out	0x07, r24	; 7
 386:	8a b9       	out	0x0a, r24	; 10
 388:	88 ee       	ldi	r24, 0xE8	; 232
 38a:	93 e0       	ldi	r25, 0x03	; 3
 38c:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <contor_sec_1+0x1>
 390:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <contor_sec_1>
 394:	08 95       	ret

00000396 <timer0_init>:
 396:	84 b5       	in	r24, 0x24	; 36
 398:	82 60       	ori	r24, 0x02	; 2
 39a:	84 bd       	out	0x24, r24	; 36
 39c:	85 b5       	in	r24, 0x25	; 37
 39e:	83 60       	ori	r24, 0x03	; 3
 3a0:	85 bd       	out	0x25, r24	; 37
 3a2:	89 ef       	ldi	r24, 0xF9	; 249
 3a4:	87 bd       	out	0x27, r24	; 39
 3a6:	ee e6       	ldi	r30, 0x6E	; 110
 3a8:	f0 e0       	ldi	r31, 0x00	; 0
 3aa:	80 81       	ld	r24, Z
 3ac:	82 60       	ori	r24, 0x02	; 2
 3ae:	80 83       	st	Z, r24
 3b0:	08 95       	ret

000003b2 <init_timer>:
 3b2:	f8 94       	cli
 3b4:	0e 94 cb 01 	call	0x396	; 0x396 <timer0_init>
 3b8:	78 94       	sei
 3ba:	08 95       	ret

000003bc <sprintf>:
 3bc:	ae e0       	ldi	r26, 0x0E	; 14
 3be:	b0 e0       	ldi	r27, 0x00	; 0
 3c0:	e4 ee       	ldi	r30, 0xE4	; 228
 3c2:	f1 e0       	ldi	r31, 0x01	; 1
 3c4:	0c 94 9f 04 	jmp	0x93e	; 0x93e <__prologue_saves__+0x1c>
 3c8:	0d 89       	ldd	r16, Y+21	; 0x15
 3ca:	1e 89       	ldd	r17, Y+22	; 0x16
 3cc:	86 e0       	ldi	r24, 0x06	; 6
 3ce:	8c 83       	std	Y+4, r24	; 0x04
 3d0:	1a 83       	std	Y+2, r17	; 0x02
 3d2:	09 83       	std	Y+1, r16	; 0x01
 3d4:	8f ef       	ldi	r24, 0xFF	; 255
 3d6:	9f e7       	ldi	r25, 0x7F	; 127
 3d8:	9e 83       	std	Y+6, r25	; 0x06
 3da:	8d 83       	std	Y+5, r24	; 0x05
 3dc:	ae 01       	movw	r20, r28
 3de:	47 5e       	subi	r20, 0xE7	; 231
 3e0:	5f 4f       	sbci	r21, 0xFF	; 255
 3e2:	6f 89       	ldd	r22, Y+23	; 0x17
 3e4:	78 8d       	ldd	r23, Y+24	; 0x18
 3e6:	ce 01       	movw	r24, r28
 3e8:	01 96       	adiw	r24, 0x01	; 1
 3ea:	0e 94 00 02 	call	0x400	; 0x400 <vfprintf>
 3ee:	ef 81       	ldd	r30, Y+7	; 0x07
 3f0:	f8 85       	ldd	r31, Y+8	; 0x08
 3f2:	e0 0f       	add	r30, r16
 3f4:	f1 1f       	adc	r31, r17
 3f6:	10 82       	st	Z, r1
 3f8:	2e 96       	adiw	r28, 0x0e	; 14
 3fa:	e4 e0       	ldi	r30, 0x04	; 4
 3fc:	0c 94 bb 04 	jmp	0x976	; 0x976 <__epilogue_restores__+0x1c>

00000400 <vfprintf>:
 400:	ab e0       	ldi	r26, 0x0B	; 11
 402:	b0 e0       	ldi	r27, 0x00	; 0
 404:	e6 e0       	ldi	r30, 0x06	; 6
 406:	f2 e0       	ldi	r31, 0x02	; 2
 408:	0c 94 91 04 	jmp	0x922	; 0x922 <__prologue_saves__>
 40c:	6c 01       	movw	r12, r24
 40e:	7b 01       	movw	r14, r22
 410:	8a 01       	movw	r16, r20
 412:	fc 01       	movw	r30, r24
 414:	17 82       	std	Z+7, r1	; 0x07
 416:	16 82       	std	Z+6, r1	; 0x06
 418:	83 81       	ldd	r24, Z+3	; 0x03
 41a:	81 ff       	sbrs	r24, 1
 41c:	cc c1       	rjmp	.+920    	; 0x7b6 <vfprintf+0x3b6>
 41e:	ce 01       	movw	r24, r28
 420:	01 96       	adiw	r24, 0x01	; 1
 422:	3c 01       	movw	r6, r24
 424:	f6 01       	movw	r30, r12
 426:	93 81       	ldd	r25, Z+3	; 0x03
 428:	f7 01       	movw	r30, r14
 42a:	93 fd       	sbrc	r25, 3
 42c:	85 91       	lpm	r24, Z+
 42e:	93 ff       	sbrs	r25, 3
 430:	81 91       	ld	r24, Z+
 432:	7f 01       	movw	r14, r30
 434:	88 23       	and	r24, r24
 436:	09 f4       	brne	.+2      	; 0x43a <vfprintf+0x3a>
 438:	ba c1       	rjmp	.+884    	; 0x7ae <vfprintf+0x3ae>
 43a:	85 32       	cpi	r24, 0x25	; 37
 43c:	39 f4       	brne	.+14     	; 0x44c <vfprintf+0x4c>
 43e:	93 fd       	sbrc	r25, 3
 440:	85 91       	lpm	r24, Z+
 442:	93 ff       	sbrs	r25, 3
 444:	81 91       	ld	r24, Z+
 446:	7f 01       	movw	r14, r30
 448:	85 32       	cpi	r24, 0x25	; 37
 44a:	29 f4       	brne	.+10     	; 0x456 <vfprintf+0x56>
 44c:	b6 01       	movw	r22, r12
 44e:	90 e0       	ldi	r25, 0x00	; 0
 450:	0e 94 f7 03 	call	0x7ee	; 0x7ee <fputc>
 454:	e7 cf       	rjmp	.-50     	; 0x424 <vfprintf+0x24>
 456:	91 2c       	mov	r9, r1
 458:	21 2c       	mov	r2, r1
 45a:	31 2c       	mov	r3, r1
 45c:	ff e1       	ldi	r31, 0x1F	; 31
 45e:	f3 15       	cp	r31, r3
 460:	d8 f0       	brcs	.+54     	; 0x498 <vfprintf+0x98>
 462:	8b 32       	cpi	r24, 0x2B	; 43
 464:	79 f0       	breq	.+30     	; 0x484 <vfprintf+0x84>
 466:	38 f4       	brcc	.+14     	; 0x476 <vfprintf+0x76>
 468:	80 32       	cpi	r24, 0x20	; 32
 46a:	79 f0       	breq	.+30     	; 0x48a <vfprintf+0x8a>
 46c:	83 32       	cpi	r24, 0x23	; 35
 46e:	a1 f4       	brne	.+40     	; 0x498 <vfprintf+0x98>
 470:	23 2d       	mov	r18, r3
 472:	20 61       	ori	r18, 0x10	; 16
 474:	1d c0       	rjmp	.+58     	; 0x4b0 <vfprintf+0xb0>
 476:	8d 32       	cpi	r24, 0x2D	; 45
 478:	61 f0       	breq	.+24     	; 0x492 <vfprintf+0x92>
 47a:	80 33       	cpi	r24, 0x30	; 48
 47c:	69 f4       	brne	.+26     	; 0x498 <vfprintf+0x98>
 47e:	23 2d       	mov	r18, r3
 480:	21 60       	ori	r18, 0x01	; 1
 482:	16 c0       	rjmp	.+44     	; 0x4b0 <vfprintf+0xb0>
 484:	83 2d       	mov	r24, r3
 486:	82 60       	ori	r24, 0x02	; 2
 488:	38 2e       	mov	r3, r24
 48a:	e3 2d       	mov	r30, r3
 48c:	e4 60       	ori	r30, 0x04	; 4
 48e:	3e 2e       	mov	r3, r30
 490:	2a c0       	rjmp	.+84     	; 0x4e6 <vfprintf+0xe6>
 492:	f3 2d       	mov	r31, r3
 494:	f8 60       	ori	r31, 0x08	; 8
 496:	1d c0       	rjmp	.+58     	; 0x4d2 <vfprintf+0xd2>
 498:	37 fc       	sbrc	r3, 7
 49a:	2d c0       	rjmp	.+90     	; 0x4f6 <vfprintf+0xf6>
 49c:	20 ed       	ldi	r18, 0xD0	; 208
 49e:	28 0f       	add	r18, r24
 4a0:	2a 30       	cpi	r18, 0x0A	; 10
 4a2:	40 f0       	brcs	.+16     	; 0x4b4 <vfprintf+0xb4>
 4a4:	8e 32       	cpi	r24, 0x2E	; 46
 4a6:	b9 f4       	brne	.+46     	; 0x4d6 <vfprintf+0xd6>
 4a8:	36 fc       	sbrc	r3, 6
 4aa:	81 c1       	rjmp	.+770    	; 0x7ae <vfprintf+0x3ae>
 4ac:	23 2d       	mov	r18, r3
 4ae:	20 64       	ori	r18, 0x40	; 64
 4b0:	32 2e       	mov	r3, r18
 4b2:	19 c0       	rjmp	.+50     	; 0x4e6 <vfprintf+0xe6>
 4b4:	36 fe       	sbrs	r3, 6
 4b6:	06 c0       	rjmp	.+12     	; 0x4c4 <vfprintf+0xc4>
 4b8:	8a e0       	ldi	r24, 0x0A	; 10
 4ba:	98 9e       	mul	r9, r24
 4bc:	20 0d       	add	r18, r0
 4be:	11 24       	eor	r1, r1
 4c0:	92 2e       	mov	r9, r18
 4c2:	11 c0       	rjmp	.+34     	; 0x4e6 <vfprintf+0xe6>
 4c4:	ea e0       	ldi	r30, 0x0A	; 10
 4c6:	2e 9e       	mul	r2, r30
 4c8:	20 0d       	add	r18, r0
 4ca:	11 24       	eor	r1, r1
 4cc:	22 2e       	mov	r2, r18
 4ce:	f3 2d       	mov	r31, r3
 4d0:	f0 62       	ori	r31, 0x20	; 32
 4d2:	3f 2e       	mov	r3, r31
 4d4:	08 c0       	rjmp	.+16     	; 0x4e6 <vfprintf+0xe6>
 4d6:	8c 36       	cpi	r24, 0x6C	; 108
 4d8:	21 f4       	brne	.+8      	; 0x4e2 <vfprintf+0xe2>
 4da:	83 2d       	mov	r24, r3
 4dc:	80 68       	ori	r24, 0x80	; 128
 4de:	38 2e       	mov	r3, r24
 4e0:	02 c0       	rjmp	.+4      	; 0x4e6 <vfprintf+0xe6>
 4e2:	88 36       	cpi	r24, 0x68	; 104
 4e4:	41 f4       	brne	.+16     	; 0x4f6 <vfprintf+0xf6>
 4e6:	f7 01       	movw	r30, r14
 4e8:	93 fd       	sbrc	r25, 3
 4ea:	85 91       	lpm	r24, Z+
 4ec:	93 ff       	sbrs	r25, 3
 4ee:	81 91       	ld	r24, Z+
 4f0:	7f 01       	movw	r14, r30
 4f2:	81 11       	cpse	r24, r1
 4f4:	b3 cf       	rjmp	.-154    	; 0x45c <vfprintf+0x5c>
 4f6:	98 2f       	mov	r25, r24
 4f8:	9f 7d       	andi	r25, 0xDF	; 223
 4fa:	95 54       	subi	r25, 0x45	; 69
 4fc:	93 30       	cpi	r25, 0x03	; 3
 4fe:	28 f4       	brcc	.+10     	; 0x50a <vfprintf+0x10a>
 500:	0c 5f       	subi	r16, 0xFC	; 252
 502:	1f 4f       	sbci	r17, 0xFF	; 255
 504:	9f e3       	ldi	r25, 0x3F	; 63
 506:	99 83       	std	Y+1, r25	; 0x01
 508:	0d c0       	rjmp	.+26     	; 0x524 <vfprintf+0x124>
 50a:	83 36       	cpi	r24, 0x63	; 99
 50c:	31 f0       	breq	.+12     	; 0x51a <vfprintf+0x11a>
 50e:	83 37       	cpi	r24, 0x73	; 115
 510:	71 f0       	breq	.+28     	; 0x52e <vfprintf+0x12e>
 512:	83 35       	cpi	r24, 0x53	; 83
 514:	09 f0       	breq	.+2      	; 0x518 <vfprintf+0x118>
 516:	59 c0       	rjmp	.+178    	; 0x5ca <vfprintf+0x1ca>
 518:	21 c0       	rjmp	.+66     	; 0x55c <vfprintf+0x15c>
 51a:	f8 01       	movw	r30, r16
 51c:	80 81       	ld	r24, Z
 51e:	89 83       	std	Y+1, r24	; 0x01
 520:	0e 5f       	subi	r16, 0xFE	; 254
 522:	1f 4f       	sbci	r17, 0xFF	; 255
 524:	88 24       	eor	r8, r8
 526:	83 94       	inc	r8
 528:	91 2c       	mov	r9, r1
 52a:	53 01       	movw	r10, r6
 52c:	13 c0       	rjmp	.+38     	; 0x554 <vfprintf+0x154>
 52e:	28 01       	movw	r4, r16
 530:	f2 e0       	ldi	r31, 0x02	; 2
 532:	4f 0e       	add	r4, r31
 534:	51 1c       	adc	r5, r1
 536:	f8 01       	movw	r30, r16
 538:	a0 80       	ld	r10, Z
 53a:	b1 80       	ldd	r11, Z+1	; 0x01
 53c:	36 fe       	sbrs	r3, 6
 53e:	03 c0       	rjmp	.+6      	; 0x546 <vfprintf+0x146>
 540:	69 2d       	mov	r22, r9
 542:	70 e0       	ldi	r23, 0x00	; 0
 544:	02 c0       	rjmp	.+4      	; 0x54a <vfprintf+0x14a>
 546:	6f ef       	ldi	r22, 0xFF	; 255
 548:	7f ef       	ldi	r23, 0xFF	; 255
 54a:	c5 01       	movw	r24, r10
 54c:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <strnlen>
 550:	4c 01       	movw	r8, r24
 552:	82 01       	movw	r16, r4
 554:	f3 2d       	mov	r31, r3
 556:	ff 77       	andi	r31, 0x7F	; 127
 558:	3f 2e       	mov	r3, r31
 55a:	16 c0       	rjmp	.+44     	; 0x588 <vfprintf+0x188>
 55c:	28 01       	movw	r4, r16
 55e:	22 e0       	ldi	r18, 0x02	; 2
 560:	42 0e       	add	r4, r18
 562:	51 1c       	adc	r5, r1
 564:	f8 01       	movw	r30, r16
 566:	a0 80       	ld	r10, Z
 568:	b1 80       	ldd	r11, Z+1	; 0x01
 56a:	36 fe       	sbrs	r3, 6
 56c:	03 c0       	rjmp	.+6      	; 0x574 <vfprintf+0x174>
 56e:	69 2d       	mov	r22, r9
 570:	70 e0       	ldi	r23, 0x00	; 0
 572:	02 c0       	rjmp	.+4      	; 0x578 <vfprintf+0x178>
 574:	6f ef       	ldi	r22, 0xFF	; 255
 576:	7f ef       	ldi	r23, 0xFF	; 255
 578:	c5 01       	movw	r24, r10
 57a:	0e 94 e1 03 	call	0x7c2	; 0x7c2 <strnlen_P>
 57e:	4c 01       	movw	r8, r24
 580:	f3 2d       	mov	r31, r3
 582:	f0 68       	ori	r31, 0x80	; 128
 584:	3f 2e       	mov	r3, r31
 586:	82 01       	movw	r16, r4
 588:	33 fc       	sbrc	r3, 3
 58a:	1b c0       	rjmp	.+54     	; 0x5c2 <vfprintf+0x1c2>
 58c:	82 2d       	mov	r24, r2
 58e:	90 e0       	ldi	r25, 0x00	; 0
 590:	88 16       	cp	r8, r24
 592:	99 06       	cpc	r9, r25
 594:	b0 f4       	brcc	.+44     	; 0x5c2 <vfprintf+0x1c2>
 596:	b6 01       	movw	r22, r12
 598:	80 e2       	ldi	r24, 0x20	; 32
 59a:	90 e0       	ldi	r25, 0x00	; 0
 59c:	0e 94 f7 03 	call	0x7ee	; 0x7ee <fputc>
 5a0:	2a 94       	dec	r2
 5a2:	f4 cf       	rjmp	.-24     	; 0x58c <vfprintf+0x18c>
 5a4:	f5 01       	movw	r30, r10
 5a6:	37 fc       	sbrc	r3, 7
 5a8:	85 91       	lpm	r24, Z+
 5aa:	37 fe       	sbrs	r3, 7
 5ac:	81 91       	ld	r24, Z+
 5ae:	5f 01       	movw	r10, r30
 5b0:	b6 01       	movw	r22, r12
 5b2:	90 e0       	ldi	r25, 0x00	; 0
 5b4:	0e 94 f7 03 	call	0x7ee	; 0x7ee <fputc>
 5b8:	21 10       	cpse	r2, r1
 5ba:	2a 94       	dec	r2
 5bc:	21 e0       	ldi	r18, 0x01	; 1
 5be:	82 1a       	sub	r8, r18
 5c0:	91 08       	sbc	r9, r1
 5c2:	81 14       	cp	r8, r1
 5c4:	91 04       	cpc	r9, r1
 5c6:	71 f7       	brne	.-36     	; 0x5a4 <vfprintf+0x1a4>
 5c8:	e8 c0       	rjmp	.+464    	; 0x79a <vfprintf+0x39a>
 5ca:	84 36       	cpi	r24, 0x64	; 100
 5cc:	11 f0       	breq	.+4      	; 0x5d2 <vfprintf+0x1d2>
 5ce:	89 36       	cpi	r24, 0x69	; 105
 5d0:	41 f5       	brne	.+80     	; 0x622 <vfprintf+0x222>
 5d2:	f8 01       	movw	r30, r16
 5d4:	37 fe       	sbrs	r3, 7
 5d6:	07 c0       	rjmp	.+14     	; 0x5e6 <vfprintf+0x1e6>
 5d8:	60 81       	ld	r22, Z
 5da:	71 81       	ldd	r23, Z+1	; 0x01
 5dc:	82 81       	ldd	r24, Z+2	; 0x02
 5de:	93 81       	ldd	r25, Z+3	; 0x03
 5e0:	0c 5f       	subi	r16, 0xFC	; 252
 5e2:	1f 4f       	sbci	r17, 0xFF	; 255
 5e4:	08 c0       	rjmp	.+16     	; 0x5f6 <vfprintf+0x1f6>
 5e6:	60 81       	ld	r22, Z
 5e8:	71 81       	ldd	r23, Z+1	; 0x01
 5ea:	07 2e       	mov	r0, r23
 5ec:	00 0c       	add	r0, r0
 5ee:	88 0b       	sbc	r24, r24
 5f0:	99 0b       	sbc	r25, r25
 5f2:	0e 5f       	subi	r16, 0xFE	; 254
 5f4:	1f 4f       	sbci	r17, 0xFF	; 255
 5f6:	f3 2d       	mov	r31, r3
 5f8:	ff 76       	andi	r31, 0x6F	; 111
 5fa:	3f 2e       	mov	r3, r31
 5fc:	97 ff       	sbrs	r25, 7
 5fe:	09 c0       	rjmp	.+18     	; 0x612 <vfprintf+0x212>
 600:	90 95       	com	r25
 602:	80 95       	com	r24
 604:	70 95       	com	r23
 606:	61 95       	neg	r22
 608:	7f 4f       	sbci	r23, 0xFF	; 255
 60a:	8f 4f       	sbci	r24, 0xFF	; 255
 60c:	9f 4f       	sbci	r25, 0xFF	; 255
 60e:	f0 68       	ori	r31, 0x80	; 128
 610:	3f 2e       	mov	r3, r31
 612:	2a e0       	ldi	r18, 0x0A	; 10
 614:	30 e0       	ldi	r19, 0x00	; 0
 616:	a3 01       	movw	r20, r6
 618:	0e 94 33 04 	call	0x866	; 0x866 <__ultoa_invert>
 61c:	88 2e       	mov	r8, r24
 61e:	86 18       	sub	r8, r6
 620:	45 c0       	rjmp	.+138    	; 0x6ac <vfprintf+0x2ac>
 622:	85 37       	cpi	r24, 0x75	; 117
 624:	31 f4       	brne	.+12     	; 0x632 <vfprintf+0x232>
 626:	23 2d       	mov	r18, r3
 628:	2f 7e       	andi	r18, 0xEF	; 239
 62a:	b2 2e       	mov	r11, r18
 62c:	2a e0       	ldi	r18, 0x0A	; 10
 62e:	30 e0       	ldi	r19, 0x00	; 0
 630:	25 c0       	rjmp	.+74     	; 0x67c <vfprintf+0x27c>
 632:	93 2d       	mov	r25, r3
 634:	99 7f       	andi	r25, 0xF9	; 249
 636:	b9 2e       	mov	r11, r25
 638:	8f 36       	cpi	r24, 0x6F	; 111
 63a:	c1 f0       	breq	.+48     	; 0x66c <vfprintf+0x26c>
 63c:	18 f4       	brcc	.+6      	; 0x644 <vfprintf+0x244>
 63e:	88 35       	cpi	r24, 0x58	; 88
 640:	79 f0       	breq	.+30     	; 0x660 <vfprintf+0x260>
 642:	b5 c0       	rjmp	.+362    	; 0x7ae <vfprintf+0x3ae>
 644:	80 37       	cpi	r24, 0x70	; 112
 646:	19 f0       	breq	.+6      	; 0x64e <vfprintf+0x24e>
 648:	88 37       	cpi	r24, 0x78	; 120
 64a:	21 f0       	breq	.+8      	; 0x654 <vfprintf+0x254>
 64c:	b0 c0       	rjmp	.+352    	; 0x7ae <vfprintf+0x3ae>
 64e:	e9 2f       	mov	r30, r25
 650:	e0 61       	ori	r30, 0x10	; 16
 652:	be 2e       	mov	r11, r30
 654:	b4 fe       	sbrs	r11, 4
 656:	0d c0       	rjmp	.+26     	; 0x672 <vfprintf+0x272>
 658:	fb 2d       	mov	r31, r11
 65a:	f4 60       	ori	r31, 0x04	; 4
 65c:	bf 2e       	mov	r11, r31
 65e:	09 c0       	rjmp	.+18     	; 0x672 <vfprintf+0x272>
 660:	34 fe       	sbrs	r3, 4
 662:	0a c0       	rjmp	.+20     	; 0x678 <vfprintf+0x278>
 664:	29 2f       	mov	r18, r25
 666:	26 60       	ori	r18, 0x06	; 6
 668:	b2 2e       	mov	r11, r18
 66a:	06 c0       	rjmp	.+12     	; 0x678 <vfprintf+0x278>
 66c:	28 e0       	ldi	r18, 0x08	; 8
 66e:	30 e0       	ldi	r19, 0x00	; 0
 670:	05 c0       	rjmp	.+10     	; 0x67c <vfprintf+0x27c>
 672:	20 e1       	ldi	r18, 0x10	; 16
 674:	30 e0       	ldi	r19, 0x00	; 0
 676:	02 c0       	rjmp	.+4      	; 0x67c <vfprintf+0x27c>
 678:	20 e1       	ldi	r18, 0x10	; 16
 67a:	32 e0       	ldi	r19, 0x02	; 2
 67c:	f8 01       	movw	r30, r16
 67e:	b7 fe       	sbrs	r11, 7
 680:	07 c0       	rjmp	.+14     	; 0x690 <vfprintf+0x290>
 682:	60 81       	ld	r22, Z
 684:	71 81       	ldd	r23, Z+1	; 0x01
 686:	82 81       	ldd	r24, Z+2	; 0x02
 688:	93 81       	ldd	r25, Z+3	; 0x03
 68a:	0c 5f       	subi	r16, 0xFC	; 252
 68c:	1f 4f       	sbci	r17, 0xFF	; 255
 68e:	06 c0       	rjmp	.+12     	; 0x69c <vfprintf+0x29c>
 690:	60 81       	ld	r22, Z
 692:	71 81       	ldd	r23, Z+1	; 0x01
 694:	80 e0       	ldi	r24, 0x00	; 0
 696:	90 e0       	ldi	r25, 0x00	; 0
 698:	0e 5f       	subi	r16, 0xFE	; 254
 69a:	1f 4f       	sbci	r17, 0xFF	; 255
 69c:	a3 01       	movw	r20, r6
 69e:	0e 94 33 04 	call	0x866	; 0x866 <__ultoa_invert>
 6a2:	88 2e       	mov	r8, r24
 6a4:	86 18       	sub	r8, r6
 6a6:	fb 2d       	mov	r31, r11
 6a8:	ff 77       	andi	r31, 0x7F	; 127
 6aa:	3f 2e       	mov	r3, r31
 6ac:	36 fe       	sbrs	r3, 6
 6ae:	0d c0       	rjmp	.+26     	; 0x6ca <vfprintf+0x2ca>
 6b0:	23 2d       	mov	r18, r3
 6b2:	2e 7f       	andi	r18, 0xFE	; 254
 6b4:	a2 2e       	mov	r10, r18
 6b6:	89 14       	cp	r8, r9
 6b8:	58 f4       	brcc	.+22     	; 0x6d0 <vfprintf+0x2d0>
 6ba:	34 fe       	sbrs	r3, 4
 6bc:	0b c0       	rjmp	.+22     	; 0x6d4 <vfprintf+0x2d4>
 6be:	32 fc       	sbrc	r3, 2
 6c0:	09 c0       	rjmp	.+18     	; 0x6d4 <vfprintf+0x2d4>
 6c2:	83 2d       	mov	r24, r3
 6c4:	8e 7e       	andi	r24, 0xEE	; 238
 6c6:	a8 2e       	mov	r10, r24
 6c8:	05 c0       	rjmp	.+10     	; 0x6d4 <vfprintf+0x2d4>
 6ca:	b8 2c       	mov	r11, r8
 6cc:	a3 2c       	mov	r10, r3
 6ce:	03 c0       	rjmp	.+6      	; 0x6d6 <vfprintf+0x2d6>
 6d0:	b8 2c       	mov	r11, r8
 6d2:	01 c0       	rjmp	.+2      	; 0x6d6 <vfprintf+0x2d6>
 6d4:	b9 2c       	mov	r11, r9
 6d6:	a4 fe       	sbrs	r10, 4
 6d8:	0f c0       	rjmp	.+30     	; 0x6f8 <vfprintf+0x2f8>
 6da:	fe 01       	movw	r30, r28
 6dc:	e8 0d       	add	r30, r8
 6de:	f1 1d       	adc	r31, r1
 6e0:	80 81       	ld	r24, Z
 6e2:	80 33       	cpi	r24, 0x30	; 48
 6e4:	21 f4       	brne	.+8      	; 0x6ee <vfprintf+0x2ee>
 6e6:	9a 2d       	mov	r25, r10
 6e8:	99 7e       	andi	r25, 0xE9	; 233
 6ea:	a9 2e       	mov	r10, r25
 6ec:	09 c0       	rjmp	.+18     	; 0x700 <vfprintf+0x300>
 6ee:	a2 fe       	sbrs	r10, 2
 6f0:	06 c0       	rjmp	.+12     	; 0x6fe <vfprintf+0x2fe>
 6f2:	b3 94       	inc	r11
 6f4:	b3 94       	inc	r11
 6f6:	04 c0       	rjmp	.+8      	; 0x700 <vfprintf+0x300>
 6f8:	8a 2d       	mov	r24, r10
 6fa:	86 78       	andi	r24, 0x86	; 134
 6fc:	09 f0       	breq	.+2      	; 0x700 <vfprintf+0x300>
 6fe:	b3 94       	inc	r11
 700:	a3 fc       	sbrc	r10, 3
 702:	11 c0       	rjmp	.+34     	; 0x726 <vfprintf+0x326>
 704:	a0 fe       	sbrs	r10, 0
 706:	06 c0       	rjmp	.+12     	; 0x714 <vfprintf+0x314>
 708:	b2 14       	cp	r11, r2
 70a:	88 f4       	brcc	.+34     	; 0x72e <vfprintf+0x32e>
 70c:	28 0c       	add	r2, r8
 70e:	92 2c       	mov	r9, r2
 710:	9b 18       	sub	r9, r11
 712:	0e c0       	rjmp	.+28     	; 0x730 <vfprintf+0x330>
 714:	b2 14       	cp	r11, r2
 716:	60 f4       	brcc	.+24     	; 0x730 <vfprintf+0x330>
 718:	b6 01       	movw	r22, r12
 71a:	80 e2       	ldi	r24, 0x20	; 32
 71c:	90 e0       	ldi	r25, 0x00	; 0
 71e:	0e 94 f7 03 	call	0x7ee	; 0x7ee <fputc>
 722:	b3 94       	inc	r11
 724:	f7 cf       	rjmp	.-18     	; 0x714 <vfprintf+0x314>
 726:	b2 14       	cp	r11, r2
 728:	18 f4       	brcc	.+6      	; 0x730 <vfprintf+0x330>
 72a:	2b 18       	sub	r2, r11
 72c:	02 c0       	rjmp	.+4      	; 0x732 <vfprintf+0x332>
 72e:	98 2c       	mov	r9, r8
 730:	21 2c       	mov	r2, r1
 732:	a4 fe       	sbrs	r10, 4
 734:	10 c0       	rjmp	.+32     	; 0x756 <vfprintf+0x356>
 736:	b6 01       	movw	r22, r12
 738:	80 e3       	ldi	r24, 0x30	; 48
 73a:	90 e0       	ldi	r25, 0x00	; 0
 73c:	0e 94 f7 03 	call	0x7ee	; 0x7ee <fputc>
 740:	a2 fe       	sbrs	r10, 2
 742:	17 c0       	rjmp	.+46     	; 0x772 <vfprintf+0x372>
 744:	a1 fc       	sbrc	r10, 1
 746:	03 c0       	rjmp	.+6      	; 0x74e <vfprintf+0x34e>
 748:	88 e7       	ldi	r24, 0x78	; 120
 74a:	90 e0       	ldi	r25, 0x00	; 0
 74c:	02 c0       	rjmp	.+4      	; 0x752 <vfprintf+0x352>
 74e:	88 e5       	ldi	r24, 0x58	; 88
 750:	90 e0       	ldi	r25, 0x00	; 0
 752:	b6 01       	movw	r22, r12
 754:	0c c0       	rjmp	.+24     	; 0x76e <vfprintf+0x36e>
 756:	8a 2d       	mov	r24, r10
 758:	86 78       	andi	r24, 0x86	; 134
 75a:	59 f0       	breq	.+22     	; 0x772 <vfprintf+0x372>
 75c:	a1 fe       	sbrs	r10, 1
 75e:	02 c0       	rjmp	.+4      	; 0x764 <vfprintf+0x364>
 760:	8b e2       	ldi	r24, 0x2B	; 43
 762:	01 c0       	rjmp	.+2      	; 0x766 <vfprintf+0x366>
 764:	80 e2       	ldi	r24, 0x20	; 32
 766:	a7 fc       	sbrc	r10, 7
 768:	8d e2       	ldi	r24, 0x2D	; 45
 76a:	b6 01       	movw	r22, r12
 76c:	90 e0       	ldi	r25, 0x00	; 0
 76e:	0e 94 f7 03 	call	0x7ee	; 0x7ee <fputc>
 772:	89 14       	cp	r8, r9
 774:	38 f4       	brcc	.+14     	; 0x784 <vfprintf+0x384>
 776:	b6 01       	movw	r22, r12
 778:	80 e3       	ldi	r24, 0x30	; 48
 77a:	90 e0       	ldi	r25, 0x00	; 0
 77c:	0e 94 f7 03 	call	0x7ee	; 0x7ee <fputc>
 780:	9a 94       	dec	r9
 782:	f7 cf       	rjmp	.-18     	; 0x772 <vfprintf+0x372>
 784:	8a 94       	dec	r8
 786:	f3 01       	movw	r30, r6
 788:	e8 0d       	add	r30, r8
 78a:	f1 1d       	adc	r31, r1
 78c:	80 81       	ld	r24, Z
 78e:	b6 01       	movw	r22, r12
 790:	90 e0       	ldi	r25, 0x00	; 0
 792:	0e 94 f7 03 	call	0x7ee	; 0x7ee <fputc>
 796:	81 10       	cpse	r8, r1
 798:	f5 cf       	rjmp	.-22     	; 0x784 <vfprintf+0x384>
 79a:	22 20       	and	r2, r2
 79c:	09 f4       	brne	.+2      	; 0x7a0 <vfprintf+0x3a0>
 79e:	42 ce       	rjmp	.-892    	; 0x424 <vfprintf+0x24>
 7a0:	b6 01       	movw	r22, r12
 7a2:	80 e2       	ldi	r24, 0x20	; 32
 7a4:	90 e0       	ldi	r25, 0x00	; 0
 7a6:	0e 94 f7 03 	call	0x7ee	; 0x7ee <fputc>
 7aa:	2a 94       	dec	r2
 7ac:	f6 cf       	rjmp	.-20     	; 0x79a <vfprintf+0x39a>
 7ae:	f6 01       	movw	r30, r12
 7b0:	86 81       	ldd	r24, Z+6	; 0x06
 7b2:	97 81       	ldd	r25, Z+7	; 0x07
 7b4:	02 c0       	rjmp	.+4      	; 0x7ba <vfprintf+0x3ba>
 7b6:	8f ef       	ldi	r24, 0xFF	; 255
 7b8:	9f ef       	ldi	r25, 0xFF	; 255
 7ba:	2b 96       	adiw	r28, 0x0b	; 11
 7bc:	e2 e1       	ldi	r30, 0x12	; 18
 7be:	0c 94 ad 04 	jmp	0x95a	; 0x95a <__epilogue_restores__>

000007c2 <strnlen_P>:
 7c2:	fc 01       	movw	r30, r24
 7c4:	05 90       	lpm	r0, Z+
 7c6:	61 50       	subi	r22, 0x01	; 1
 7c8:	70 40       	sbci	r23, 0x00	; 0
 7ca:	01 10       	cpse	r0, r1
 7cc:	d8 f7       	brcc	.-10     	; 0x7c4 <strnlen_P+0x2>
 7ce:	80 95       	com	r24
 7d0:	90 95       	com	r25
 7d2:	8e 0f       	add	r24, r30
 7d4:	9f 1f       	adc	r25, r31
 7d6:	08 95       	ret

000007d8 <strnlen>:
 7d8:	fc 01       	movw	r30, r24
 7da:	61 50       	subi	r22, 0x01	; 1
 7dc:	70 40       	sbci	r23, 0x00	; 0
 7de:	01 90       	ld	r0, Z+
 7e0:	01 10       	cpse	r0, r1
 7e2:	d8 f7       	brcc	.-10     	; 0x7da <strnlen+0x2>
 7e4:	80 95       	com	r24
 7e6:	90 95       	com	r25
 7e8:	8e 0f       	add	r24, r30
 7ea:	9f 1f       	adc	r25, r31
 7ec:	08 95       	ret

000007ee <fputc>:
 7ee:	0f 93       	push	r16
 7f0:	1f 93       	push	r17
 7f2:	cf 93       	push	r28
 7f4:	df 93       	push	r29
 7f6:	fb 01       	movw	r30, r22
 7f8:	23 81       	ldd	r18, Z+3	; 0x03
 7fa:	21 fd       	sbrc	r18, 1
 7fc:	03 c0       	rjmp	.+6      	; 0x804 <__DATA_REGION_LENGTH__+0x4>
 7fe:	8f ef       	ldi	r24, 0xFF	; 255
 800:	9f ef       	ldi	r25, 0xFF	; 255
 802:	2c c0       	rjmp	.+88     	; 0x85c <__DATA_REGION_LENGTH__+0x5c>
 804:	22 ff       	sbrs	r18, 2
 806:	16 c0       	rjmp	.+44     	; 0x834 <__DATA_REGION_LENGTH__+0x34>
 808:	46 81       	ldd	r20, Z+6	; 0x06
 80a:	57 81       	ldd	r21, Z+7	; 0x07
 80c:	24 81       	ldd	r18, Z+4	; 0x04
 80e:	35 81       	ldd	r19, Z+5	; 0x05
 810:	42 17       	cp	r20, r18
 812:	53 07       	cpc	r21, r19
 814:	44 f4       	brge	.+16     	; 0x826 <__DATA_REGION_LENGTH__+0x26>
 816:	a0 81       	ld	r26, Z
 818:	b1 81       	ldd	r27, Z+1	; 0x01
 81a:	9d 01       	movw	r18, r26
 81c:	2f 5f       	subi	r18, 0xFF	; 255
 81e:	3f 4f       	sbci	r19, 0xFF	; 255
 820:	31 83       	std	Z+1, r19	; 0x01
 822:	20 83       	st	Z, r18
 824:	8c 93       	st	X, r24
 826:	26 81       	ldd	r18, Z+6	; 0x06
 828:	37 81       	ldd	r19, Z+7	; 0x07
 82a:	2f 5f       	subi	r18, 0xFF	; 255
 82c:	3f 4f       	sbci	r19, 0xFF	; 255
 82e:	37 83       	std	Z+7, r19	; 0x07
 830:	26 83       	std	Z+6, r18	; 0x06
 832:	14 c0       	rjmp	.+40     	; 0x85c <__DATA_REGION_LENGTH__+0x5c>
 834:	8b 01       	movw	r16, r22
 836:	ec 01       	movw	r28, r24
 838:	fb 01       	movw	r30, r22
 83a:	00 84       	ldd	r0, Z+8	; 0x08
 83c:	f1 85       	ldd	r31, Z+9	; 0x09
 83e:	e0 2d       	mov	r30, r0
 840:	09 95       	icall
 842:	89 2b       	or	r24, r25
 844:	e1 f6       	brne	.-72     	; 0x7fe <fputc+0x10>
 846:	d8 01       	movw	r26, r16
 848:	16 96       	adiw	r26, 0x06	; 6
 84a:	8d 91       	ld	r24, X+
 84c:	9c 91       	ld	r25, X
 84e:	17 97       	sbiw	r26, 0x07	; 7
 850:	01 96       	adiw	r24, 0x01	; 1
 852:	17 96       	adiw	r26, 0x07	; 7
 854:	9c 93       	st	X, r25
 856:	8e 93       	st	-X, r24
 858:	16 97       	sbiw	r26, 0x06	; 6
 85a:	ce 01       	movw	r24, r28
 85c:	df 91       	pop	r29
 85e:	cf 91       	pop	r28
 860:	1f 91       	pop	r17
 862:	0f 91       	pop	r16
 864:	08 95       	ret

00000866 <__ultoa_invert>:
 866:	fa 01       	movw	r30, r20
 868:	aa 27       	eor	r26, r26
 86a:	28 30       	cpi	r18, 0x08	; 8
 86c:	51 f1       	breq	.+84     	; 0x8c2 <__ultoa_invert+0x5c>
 86e:	20 31       	cpi	r18, 0x10	; 16
 870:	81 f1       	breq	.+96     	; 0x8d2 <__ultoa_invert+0x6c>
 872:	e8 94       	clt
 874:	6f 93       	push	r22
 876:	6e 7f       	andi	r22, 0xFE	; 254
 878:	6e 5f       	subi	r22, 0xFE	; 254
 87a:	7f 4f       	sbci	r23, 0xFF	; 255
 87c:	8f 4f       	sbci	r24, 0xFF	; 255
 87e:	9f 4f       	sbci	r25, 0xFF	; 255
 880:	af 4f       	sbci	r26, 0xFF	; 255
 882:	b1 e0       	ldi	r27, 0x01	; 1
 884:	3e d0       	rcall	.+124    	; 0x902 <__stack+0x3>
 886:	b4 e0       	ldi	r27, 0x04	; 4
 888:	3c d0       	rcall	.+120    	; 0x902 <__stack+0x3>
 88a:	67 0f       	add	r22, r23
 88c:	78 1f       	adc	r23, r24
 88e:	89 1f       	adc	r24, r25
 890:	9a 1f       	adc	r25, r26
 892:	a1 1d       	adc	r26, r1
 894:	68 0f       	add	r22, r24
 896:	79 1f       	adc	r23, r25
 898:	8a 1f       	adc	r24, r26
 89a:	91 1d       	adc	r25, r1
 89c:	a1 1d       	adc	r26, r1
 89e:	6a 0f       	add	r22, r26
 8a0:	71 1d       	adc	r23, r1
 8a2:	81 1d       	adc	r24, r1
 8a4:	91 1d       	adc	r25, r1
 8a6:	a1 1d       	adc	r26, r1
 8a8:	20 d0       	rcall	.+64     	; 0x8ea <__ultoa_invert+0x84>
 8aa:	09 f4       	brne	.+2      	; 0x8ae <__ultoa_invert+0x48>
 8ac:	68 94       	set
 8ae:	3f 91       	pop	r19
 8b0:	2a e0       	ldi	r18, 0x0A	; 10
 8b2:	26 9f       	mul	r18, r22
 8b4:	11 24       	eor	r1, r1
 8b6:	30 19       	sub	r19, r0
 8b8:	30 5d       	subi	r19, 0xD0	; 208
 8ba:	31 93       	st	Z+, r19
 8bc:	de f6       	brtc	.-74     	; 0x874 <__ultoa_invert+0xe>
 8be:	cf 01       	movw	r24, r30
 8c0:	08 95       	ret
 8c2:	46 2f       	mov	r20, r22
 8c4:	47 70       	andi	r20, 0x07	; 7
 8c6:	40 5d       	subi	r20, 0xD0	; 208
 8c8:	41 93       	st	Z+, r20
 8ca:	b3 e0       	ldi	r27, 0x03	; 3
 8cc:	0f d0       	rcall	.+30     	; 0x8ec <__ultoa_invert+0x86>
 8ce:	c9 f7       	brne	.-14     	; 0x8c2 <__ultoa_invert+0x5c>
 8d0:	f6 cf       	rjmp	.-20     	; 0x8be <__ultoa_invert+0x58>
 8d2:	46 2f       	mov	r20, r22
 8d4:	4f 70       	andi	r20, 0x0F	; 15
 8d6:	40 5d       	subi	r20, 0xD0	; 208
 8d8:	4a 33       	cpi	r20, 0x3A	; 58
 8da:	18 f0       	brcs	.+6      	; 0x8e2 <__ultoa_invert+0x7c>
 8dc:	49 5d       	subi	r20, 0xD9	; 217
 8de:	31 fd       	sbrc	r19, 1
 8e0:	40 52       	subi	r20, 0x20	; 32
 8e2:	41 93       	st	Z+, r20
 8e4:	02 d0       	rcall	.+4      	; 0x8ea <__ultoa_invert+0x84>
 8e6:	a9 f7       	brne	.-22     	; 0x8d2 <__ultoa_invert+0x6c>
 8e8:	ea cf       	rjmp	.-44     	; 0x8be <__ultoa_invert+0x58>
 8ea:	b4 e0       	ldi	r27, 0x04	; 4
 8ec:	a6 95       	lsr	r26
 8ee:	97 95       	ror	r25
 8f0:	87 95       	ror	r24
 8f2:	77 95       	ror	r23
 8f4:	67 95       	ror	r22
 8f6:	ba 95       	dec	r27
 8f8:	c9 f7       	brne	.-14     	; 0x8ec <__ultoa_invert+0x86>
 8fa:	00 97       	sbiw	r24, 0x00	; 0
 8fc:	61 05       	cpc	r22, r1
 8fe:	71 05       	cpc	r23, r1
 900:	08 95       	ret
 902:	9b 01       	movw	r18, r22
 904:	ac 01       	movw	r20, r24
 906:	0a 2e       	mov	r0, r26
 908:	06 94       	lsr	r0
 90a:	57 95       	ror	r21
 90c:	47 95       	ror	r20
 90e:	37 95       	ror	r19
 910:	27 95       	ror	r18
 912:	ba 95       	dec	r27
 914:	c9 f7       	brne	.-14     	; 0x908 <__stack+0x9>
 916:	62 0f       	add	r22, r18
 918:	73 1f       	adc	r23, r19
 91a:	84 1f       	adc	r24, r20
 91c:	95 1f       	adc	r25, r21
 91e:	a0 1d       	adc	r26, r0
 920:	08 95       	ret

00000922 <__prologue_saves__>:
 922:	2f 92       	push	r2
 924:	3f 92       	push	r3
 926:	4f 92       	push	r4
 928:	5f 92       	push	r5
 92a:	6f 92       	push	r6
 92c:	7f 92       	push	r7
 92e:	8f 92       	push	r8
 930:	9f 92       	push	r9
 932:	af 92       	push	r10
 934:	bf 92       	push	r11
 936:	cf 92       	push	r12
 938:	df 92       	push	r13
 93a:	ef 92       	push	r14
 93c:	ff 92       	push	r15
 93e:	0f 93       	push	r16
 940:	1f 93       	push	r17
 942:	cf 93       	push	r28
 944:	df 93       	push	r29
 946:	cd b7       	in	r28, 0x3d	; 61
 948:	de b7       	in	r29, 0x3e	; 62
 94a:	ca 1b       	sub	r28, r26
 94c:	db 0b       	sbc	r29, r27
 94e:	0f b6       	in	r0, 0x3f	; 63
 950:	f8 94       	cli
 952:	de bf       	out	0x3e, r29	; 62
 954:	0f be       	out	0x3f, r0	; 63
 956:	cd bf       	out	0x3d, r28	; 61
 958:	09 94       	ijmp

0000095a <__epilogue_restores__>:
 95a:	2a 88       	ldd	r2, Y+18	; 0x12
 95c:	39 88       	ldd	r3, Y+17	; 0x11
 95e:	48 88       	ldd	r4, Y+16	; 0x10
 960:	5f 84       	ldd	r5, Y+15	; 0x0f
 962:	6e 84       	ldd	r6, Y+14	; 0x0e
 964:	7d 84       	ldd	r7, Y+13	; 0x0d
 966:	8c 84       	ldd	r8, Y+12	; 0x0c
 968:	9b 84       	ldd	r9, Y+11	; 0x0b
 96a:	aa 84       	ldd	r10, Y+10	; 0x0a
 96c:	b9 84       	ldd	r11, Y+9	; 0x09
 96e:	c8 84       	ldd	r12, Y+8	; 0x08
 970:	df 80       	ldd	r13, Y+7	; 0x07
 972:	ee 80       	ldd	r14, Y+6	; 0x06
 974:	fd 80       	ldd	r15, Y+5	; 0x05
 976:	0c 81       	ldd	r16, Y+4	; 0x04
 978:	1b 81       	ldd	r17, Y+3	; 0x03
 97a:	aa 81       	ldd	r26, Y+2	; 0x02
 97c:	b9 81       	ldd	r27, Y+1	; 0x01
 97e:	ce 0f       	add	r28, r30
 980:	d1 1d       	adc	r29, r1
 982:	0f b6       	in	r0, 0x3f	; 63
 984:	f8 94       	cli
 986:	de bf       	out	0x3e, r29	; 62
 988:	0f be       	out	0x3f, r0	; 63
 98a:	cd bf       	out	0x3d, r28	; 61
 98c:	ed 01       	movw	r28, r26
 98e:	08 95       	ret

00000990 <_exit>:
 990:	f8 94       	cli

00000992 <__stop_program>:
 992:	ff cf       	rjmp	.-2      	; 0x992 <__stop_program>
