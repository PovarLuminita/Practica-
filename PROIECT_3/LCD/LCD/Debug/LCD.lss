
LCD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000010  00800100  0000095c  000009f0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000095c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000018  00800110  00800110  00000a00  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000a00  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000a5c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a8  00000000  00000000  00000a9c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000fb5  00000000  00000000  00000b44  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008c7  00000000  00000000  00001af9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000006ef  00000000  00000000  000023c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000134  00000000  00000000  00002ab0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000488  00000000  00000000  00002be4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000005b4  00000000  00000000  0000306c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000078  00000000  00000000  00003620  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__vector_14>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ec e5       	ldi	r30, 0x5C	; 92
  7c:	f9 e0       	ldi	r31, 0x09	; 9
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 31       	cpi	r26, 0x10	; 16
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a0 e1       	ldi	r26, 0x10	; 16
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a8 32       	cpi	r26, 0x28	; 40
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 53 00 	call	0xa6	; 0xa6 <main>
  9e:	0c 94 ac 04 	jmp	0x958	; 0x958 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <main>:
#include <avr/interrupt.h>


int main()
{
	sec_1 = 0;
  a6:	10 92 11 01 	sts	0x0111, r1	; 0x800111 <sec_1>
	min_1 = 30;
  aa:	8e e1       	ldi	r24, 0x1E	; 30
  ac:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__data_end>
	h_1 = 11;
  b0:	8b e0       	ldi	r24, 0x0B	; 11
  b2:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <h_1>
	
	initialize();
  b6:	0e 94 bc 00 	call	0x178	; 0x178 <initialize>
	init_data_contor();
  ba:	0e 94 a8 01 	call	0x350	; 0x350 <init_data_contor>
	init_timer();
  be:	0e 94 bd 01 	call	0x37a	; 0x37a <init_timer>


	while(1)
	{
 		afiseaza();
  c2:	0e 94 51 01 	call	0x2a2	; 0x2a2 <afiseaza>
  c6:	fd cf       	rjmp	.-6      	; 0xc2 <main+0x1c>

000000c8 <__vector_14>:
void init_data(void){
	contor_sec_1 = timp_sec_1; 
}

//intrerupere
ISR(TIMER0_COMPA_vect){
  c8:	1f 92       	push	r1
  ca:	0f 92       	push	r0
  cc:	0f b6       	in	r0, 0x3f	; 63
  ce:	0f 92       	push	r0
  d0:	11 24       	eor	r1, r1
  d2:	8f 93       	push	r24
  d4:	9f 93       	push	r25
	contor_sec_1--;
  d6:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <contor_sec_1>
  da:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <contor_sec_1+0x1>
  de:	01 97       	sbiw	r24, 0x01	; 1
  e0:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <contor_sec_1+0x1>
  e4:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <contor_sec_1>
	
	if(contor_sec_1 == 0){
  e8:	89 2b       	or	r24, r25
  ea:	61 f4       	brne	.+24     	; 0x104 <__vector_14+0x3c>
	flag1 = 1;
  ec:	81 e0       	ldi	r24, 0x01	; 1
  ee:	90 e0       	ldi	r25, 0x00	; 0
  f0:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <flag1+0x1>
  f4:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <flag1>
	
	contor_sec_1 = timp_sec_1;
  f8:	88 ee       	ldi	r24, 0xE8	; 232
  fa:	93 e0       	ldi	r25, 0x03	; 3
  fc:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <contor_sec_1+0x1>
 100:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <contor_sec_1>
	
	}
}
 104:	9f 91       	pop	r25
 106:	8f 91       	pop	r24
 108:	0f 90       	pop	r0
 10a:	0f be       	out	0x3f, r0	; 63
 10c:	0f 90       	pop	r0
 10e:	1f 90       	pop	r1
 110:	18 95       	reti

00000112 <lcd_command>:
}

//pentru a trimite comenzi catre lcd
void lcd_command( unsigned char cmnd )
{
	lcd_port = (lcd_port & 0x0F) | (cmnd & 0xF0);
 112:	9b b1       	in	r25, 0x0b	; 11
 114:	9f 70       	andi	r25, 0x0F	; 15
 116:	28 2f       	mov	r18, r24
 118:	20 7f       	andi	r18, 0xF0	; 240
 11a:	92 2b       	or	r25, r18
 11c:	9b b9       	out	0x0b, r25	; 11
	lcd_port &= ~ (1<<rs);
 11e:	9b b1       	in	r25, 0x0b	; 11
 120:	9e 7f       	andi	r25, 0xFE	; 254
 122:	9b b9       	out	0x0b, r25	; 11
	lcd_port |= (1<<en);
 124:	9b b1       	in	r25, 0x0b	; 11
 126:	92 60       	ori	r25, 0x02	; 2
 128:	9b b9       	out	0x0b, r25	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 12a:	35 e0       	ldi	r19, 0x05	; 5
 12c:	3a 95       	dec	r19
 12e:	f1 f7       	brne	.-4      	; 0x12c <lcd_command+0x1a>
 130:	00 00       	nop
	_delay_us(1);
	lcd_port &= ~ (1<<rs);
 132:	9b b1       	in	r25, 0x0b	; 11
 134:	9e 7f       	andi	r25, 0xFE	; 254
 136:	9b b9       	out	0x0b, r25	; 11
 138:	ef e1       	ldi	r30, 0x1F	; 31
 13a:	f3 e0       	ldi	r31, 0x03	; 3
 13c:	31 97       	sbiw	r30, 0x01	; 1
 13e:	f1 f7       	brne	.-4      	; 0x13c <lcd_command+0x2a>
 140:	00 c0       	rjmp	.+0      	; 0x142 <lcd_command+0x30>
 142:	00 00       	nop
	_delay_us(200);
	lcd_port = (lcd_port & 0x0F) | (cmnd << 4);
 144:	2b b1       	in	r18, 0x0b	; 11
 146:	f0 e1       	ldi	r31, 0x10	; 16
 148:	8f 9f       	mul	r24, r31
 14a:	c0 01       	movw	r24, r0
 14c:	11 24       	eor	r1, r1
 14e:	92 2f       	mov	r25, r18
 150:	9f 70       	andi	r25, 0x0F	; 15
 152:	89 2b       	or	r24, r25
 154:	8b b9       	out	0x0b, r24	; 11
	lcd_port |= (1<<en);
 156:	8b b1       	in	r24, 0x0b	; 11
 158:	82 60       	ori	r24, 0x02	; 2
 15a:	8b b9       	out	0x0b, r24	; 11
 15c:	35 e0       	ldi	r19, 0x05	; 5
 15e:	3a 95       	dec	r19
 160:	f1 f7       	brne	.-4      	; 0x15e <lcd_command+0x4c>
 162:	00 00       	nop
	_delay_us(1);
	lcd_port &= ~ (1<<en);
 164:	8b b1       	in	r24, 0x0b	; 11
 166:	8d 7f       	andi	r24, 0xFD	; 253
 168:	8b b9       	out	0x0b, r24	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 16a:	8f e3       	ldi	r24, 0x3F	; 63
 16c:	9f e1       	ldi	r25, 0x1F	; 31
 16e:	01 97       	sbiw	r24, 0x01	; 1
 170:	f1 f7       	brne	.-4      	; 0x16e <lcd_command+0x5c>
 172:	00 c0       	rjmp	.+0      	; 0x174 <lcd_command+0x62>
 174:	00 00       	nop
 176:	08 95       	ret

00000178 <initialize>:


//initializare lcd
void initialize (void)
{
	lcd_data_dir = 0xFF;	//pin D4-D7
 178:	8f ef       	ldi	r24, 0xFF	; 255
 17a:	8a b9       	out	0x0a, r24	; 10
 17c:	8f e5       	ldi	r24, 0x5F	; 95
 17e:	9a ee       	ldi	r25, 0xEA	; 234
 180:	01 97       	sbiw	r24, 0x01	; 1
 182:	f1 f7       	brne	.-4      	; 0x180 <initialize+0x8>
 184:	00 c0       	rjmp	.+0      	; 0x186 <initialize+0xe>
 186:	00 00       	nop
	
	_delay_ms(15);
	lcd_command((1<<4)|(1<<5));
 188:	80 e3       	ldi	r24, 0x30	; 48
 18a:	0e 94 89 00 	call	0x112	; 0x112 <lcd_command>
 18e:	8f e1       	ldi	r24, 0x1F	; 31
 190:	9e e4       	ldi	r25, 0x4E	; 78
 192:	01 97       	sbiw	r24, 0x01	; 1
 194:	f1 f7       	brne	.-4      	; 0x192 <initialize+0x1a>
 196:	00 c0       	rjmp	.+0      	; 0x198 <initialize+0x20>
 198:	00 00       	nop
	
	_delay_ms(5);
	lcd_command((1<<4)|(1<<5));
 19a:	80 e3       	ldi	r24, 0x30	; 48
 19c:	0e 94 89 00 	call	0x112	; 0x112 <lcd_command>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1a0:	87 e5       	ldi	r24, 0x57	; 87
 1a2:	92 e0       	ldi	r25, 0x02	; 2
 1a4:	01 97       	sbiw	r24, 0x01	; 1
 1a6:	f1 f7       	brne	.-4      	; 0x1a4 <initialize+0x2c>
 1a8:	00 c0       	rjmp	.+0      	; 0x1aa <initialize+0x32>
 1aa:	00 00       	nop
	
	_delay_us(150);
	lcd_command((1<<4)|(1<<5));
 1ac:	80 e3       	ldi	r24, 0x30	; 48
 1ae:	0e 94 89 00 	call	0x112	; 0x112 <lcd_command>
	
	lcd_command(0x02);		 
 1b2:	82 e0       	ldi	r24, 0x02	; 2
 1b4:	0e 94 89 00 	call	0x112	; 0x112 <lcd_command>
	lcd_command(0x28);       
 1b8:	88 e2       	ldi	r24, 0x28	; 40
 1ba:	0e 94 89 00 	call	0x112	; 0x112 <lcd_command>
	lcd_command(0x01);       
 1be:	81 e0       	ldi	r24, 0x01	; 1
 1c0:	0e 94 89 00 	call	0x112	; 0x112 <lcd_command>
	
	lcd_command(1<<3);
 1c4:	88 e0       	ldi	r24, 0x08	; 8
 1c6:	0e 94 89 00 	call	0x112	; 0x112 <lcd_command>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1ca:	8f e3       	ldi	r24, 0x3F	; 63
 1cc:	9f e1       	ldi	r25, 0x1F	; 31
 1ce:	01 97       	sbiw	r24, 0x01	; 1
 1d0:	f1 f7       	brne	.-4      	; 0x1ce <initialize+0x56>
 1d2:	00 c0       	rjmp	.+0      	; 0x1d4 <initialize+0x5c>
 1d4:	00 00       	nop
 1d6:	08 95       	ret

000001d8 <lcd_clear>:


//clear lcd
void lcd_clear()
{
	lcd_command (0x01);		//clear LCD
 1d8:	81 e0       	ldi	r24, 0x01	; 1
 1da:	0e 94 89 00 	call	0x112	; 0x112 <lcd_command>
 1de:	8f e3       	ldi	r24, 0x3F	; 63
 1e0:	9f e1       	ldi	r25, 0x1F	; 31
 1e2:	01 97       	sbiw	r24, 0x01	; 1
 1e4:	f1 f7       	brne	.-4      	; 0x1e2 <lcd_clear+0xa>
 1e6:	00 c0       	rjmp	.+0      	; 0x1e8 <lcd_clear+0x10>
 1e8:	00 00       	nop
	_delay_ms(2);
	lcd_command (0x80);		//muta la linia 1, pozitia 1
 1ea:	80 e8       	ldi	r24, 0x80	; 128
 1ec:	0e 94 89 00 	call	0x112	; 0x112 <lcd_command>
 1f0:	08 95       	ret

000001f2 <lcd_print>:
}

//afisare lcd
void lcd_print (char *str)
{
 1f2:	bc 01       	movw	r22, r24
	int i;
	for(i=0; str[i]!=0; i++)
 1f4:	40 e0       	ldi	r20, 0x00	; 0
 1f6:	50 e0       	ldi	r21, 0x00	; 0
 1f8:	3e c0       	rjmp	.+124    	; 0x276 <lcd_print+0x84>
	{
		lcd_port = (lcd_port & 0x0F) | (str[i] & 0xF0);
 1fa:	8b b1       	in	r24, 0x0b	; 11
 1fc:	8f 70       	andi	r24, 0x0F	; 15
 1fe:	90 7f       	andi	r25, 0xF0	; 240
 200:	98 2b       	or	r25, r24
 202:	9b b9       	out	0x0b, r25	; 11
		lcd_port |= (1<<rs);
 204:	8b b1       	in	r24, 0x0b	; 11
 206:	81 60       	ori	r24, 0x01	; 1
 208:	8b b9       	out	0x0b, r24	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 20a:	85 e0       	ldi	r24, 0x05	; 5
 20c:	8a 95       	dec	r24
 20e:	f1 f7       	brne	.-4      	; 0x20c <lcd_print+0x1a>
 210:	00 00       	nop
		_delay_us(1);
		lcd_port|= (1<<en);
 212:	8b b1       	in	r24, 0x0b	; 11
 214:	82 60       	ori	r24, 0x02	; 2
 216:	8b b9       	out	0x0b, r24	; 11
 218:	95 e0       	ldi	r25, 0x05	; 5
 21a:	9a 95       	dec	r25
 21c:	f1 f7       	brne	.-4      	; 0x21a <lcd_print+0x28>
 21e:	00 00       	nop
		_delay_us(1);
		lcd_port &= ~ (1<<en);
 220:	8b b1       	in	r24, 0x0b	; 11
 222:	8d 7f       	andi	r24, 0xFD	; 253
 224:	8b b9       	out	0x0b, r24	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 226:	8f e3       	ldi	r24, 0x3F	; 63
 228:	9f e1       	ldi	r25, 0x1F	; 31
 22a:	01 97       	sbiw	r24, 0x01	; 1
 22c:	f1 f7       	brne	.-4      	; 0x22a <lcd_print+0x38>
 22e:	00 c0       	rjmp	.+0      	; 0x230 <lcd_print+0x3e>
 230:	00 00       	nop
		_delay_ms(2);
		lcd_port = (lcd_port & 0x0F) | (str[i] << 4);
 232:	8b b1       	in	r24, 0x0b	; 11
 234:	90 81       	ld	r25, Z
 236:	e0 e1       	ldi	r30, 0x10	; 16
 238:	9e 9f       	mul	r25, r30
 23a:	90 01       	movw	r18, r0
 23c:	11 24       	eor	r1, r1
 23e:	8f 70       	andi	r24, 0x0F	; 15
 240:	28 2b       	or	r18, r24
 242:	2b b9       	out	0x0b, r18	; 11
		lcd_port |= (1<<rs);
 244:	9b b1       	in	r25, 0x0b	; 11
 246:	91 60       	ori	r25, 0x01	; 1
 248:	9b b9       	out	0x0b, r25	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 24a:	85 e0       	ldi	r24, 0x05	; 5
 24c:	8a 95       	dec	r24
 24e:	f1 f7       	brne	.-4      	; 0x24c <lcd_print+0x5a>
 250:	00 00       	nop
		_delay_us(1);
		lcd_port|= (1<<en);
 252:	9b b1       	in	r25, 0x0b	; 11
 254:	92 60       	ori	r25, 0x02	; 2
 256:	9b b9       	out	0x0b, r25	; 11
 258:	95 e0       	ldi	r25, 0x05	; 5
 25a:	9a 95       	dec	r25
 25c:	f1 f7       	brne	.-4      	; 0x25a <lcd_print+0x68>
 25e:	00 00       	nop
		_delay_us(1);
		lcd_port &= ~ (1<<en);
 260:	9b b1       	in	r25, 0x0b	; 11
 262:	9d 7f       	andi	r25, 0xFD	; 253
 264:	9b b9       	out	0x0b, r25	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 266:	8f e3       	ldi	r24, 0x3F	; 63
 268:	9f e1       	ldi	r25, 0x1F	; 31
 26a:	01 97       	sbiw	r24, 0x01	; 1
 26c:	f1 f7       	brne	.-4      	; 0x26a <lcd_print+0x78>
 26e:	00 c0       	rjmp	.+0      	; 0x270 <lcd_print+0x7e>
 270:	00 00       	nop

//afisare lcd
void lcd_print (char *str)
{
	int i;
	for(i=0; str[i]!=0; i++)
 272:	4f 5f       	subi	r20, 0xFF	; 255
 274:	5f 4f       	sbci	r21, 0xFF	; 255
 276:	fb 01       	movw	r30, r22
 278:	e4 0f       	add	r30, r20
 27a:	f5 1f       	adc	r31, r21
 27c:	90 81       	ld	r25, Z
 27e:	91 11       	cpse	r25, r1
 280:	bc cf       	rjmp	.-136    	; 0x1fa <lcd_print+0x8>
		lcd_port|= (1<<en);
		_delay_us(1);
		lcd_port &= ~ (1<<en);
		_delay_ms(2);
	}
}
 282:	08 95       	ret

00000284 <lcd_setCursor>:



void lcd_setCursor()
{
	lcd_data_dir = 0xFF;	//pin D4-D7
 284:	8f ef       	ldi	r24, 0xFF	; 255
 286:	8a b9       	out	0x0a, r24	; 10
	
	lcd_command(1<<1); //return home
 288:	82 e0       	ldi	r24, 0x02	; 2
 28a:	0e 94 89 00 	call	0x112	; 0x112 <lcd_command>
 28e:	2f ef       	ldi	r18, 0xFF	; 255
 290:	89 ef       	ldi	r24, 0xF9	; 249
 292:	90 e0       	ldi	r25, 0x00	; 0
 294:	21 50       	subi	r18, 0x01	; 1
 296:	80 40       	sbci	r24, 0x00	; 0
 298:	90 40       	sbci	r25, 0x00	; 0
 29a:	e1 f7       	brne	.-8      	; 0x294 <lcd_setCursor+0x10>
 29c:	00 c0       	rjmp	.+0      	; 0x29e <lcd_setCursor+0x1a>
 29e:	00 00       	nop
 2a0:	08 95       	ret

000002a2 <afiseaza>:
}

//functie care afiseaza pe lcd secundele
void afiseaza()
{
	lcd_clear();
 2a2:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <lcd_clear>
	lcd_setCursor();
 2a6:	0e 94 42 01 	call	0x284	; 0x284 <lcd_setCursor>
	
	if(flag1 == 1 )
 2aa:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <flag1>
 2ae:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <flag1+0x1>
 2b2:	01 97       	sbiw	r24, 0x01	; 1
 2b4:	09 f0       	breq	.+2      	; 0x2b8 <afiseaza+0x16>
 2b6:	4b c0       	rjmp	.+150    	; 0x34e <afiseaza+0xac>
	{	
		flag1 = 0;
 2b8:	10 92 15 01 	sts	0x0115, r1	; 0x800115 <flag1+0x1>
 2bc:	10 92 14 01 	sts	0x0114, r1	; 0x800114 <flag1>
		sec_1++;
 2c0:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <sec_1>
 2c4:	8f 5f       	subi	r24, 0xFF	; 255
 2c6:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <sec_1>
		
		if(sec_1 ==60){
 2ca:	8c 33       	cpi	r24, 0x3C	; 60
 2cc:	39 f4       	brne	.+14     	; 0x2dc <afiseaza+0x3a>
			min_1++;
 2ce:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <__data_end>
 2d2:	8f 5f       	subi	r24, 0xFF	; 255
 2d4:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__data_end>
			sec_1 = 0;
 2d8:	10 92 11 01 	sts	0x0111, r1	; 0x800111 <sec_1>
		}
		if(min_1==60){
 2dc:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <__data_end>
 2e0:	8c 33       	cpi	r24, 0x3C	; 60
 2e2:	49 f4       	brne	.+18     	; 0x2f6 <afiseaza+0x54>
			min_1=0;
 2e4:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <__data_end>
			sec_1=0;
 2e8:	10 92 11 01 	sts	0x0111, r1	; 0x800111 <sec_1>
			h_1++;
 2ec:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <h_1>
 2f0:	8f 5f       	subi	r24, 0xFF	; 255
 2f2:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <h_1>
		}
		if(h_1==24){
 2f6:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <h_1>
 2fa:	88 31       	cpi	r24, 0x18	; 24
 2fc:	31 f4       	brne	.+12     	; 0x30a <afiseaza+0x68>
			h_1=0;
 2fe:	10 92 26 01 	sts	0x0126, r1	; 0x800126 <h_1>
			min_1=0;
 302:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <__data_end>
		sec_1=0;}
 306:	10 92 11 01 	sts	0x0111, r1	; 0x800111 <sec_1>
		
	
		sprintf(buffer, "ORR: %d:%d:%d  ", h_1, min_1, sec_1);
 30a:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <sec_1>
 30e:	1f 92       	push	r1
 310:	8f 93       	push	r24
 312:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <__data_end>
 316:	1f 92       	push	r1
 318:	8f 93       	push	r24
 31a:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <h_1>
 31e:	1f 92       	push	r1
 320:	8f 93       	push	r24
 322:	80 e0       	ldi	r24, 0x00	; 0
 324:	91 e0       	ldi	r25, 0x01	; 1
 326:	9f 93       	push	r25
 328:	8f 93       	push	r24
 32a:	86 e1       	ldi	r24, 0x16	; 22
 32c:	91 e0       	ldi	r25, 0x01	; 1
 32e:	9f 93       	push	r25
 330:	8f 93       	push	r24
 332:	0e 94 c2 01 	call	0x384	; 0x384 <sprintf>
		lcd_print(buffer);
 336:	86 e1       	ldi	r24, 0x16	; 22
 338:	91 e0       	ldi	r25, 0x01	; 1
 33a:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <lcd_print>
 33e:	8d b7       	in	r24, 0x3d	; 61
 340:	9e b7       	in	r25, 0x3e	; 62
 342:	0a 96       	adiw	r24, 0x0a	; 10
 344:	0f b6       	in	r0, 0x3f	; 63
 346:	f8 94       	cli
 348:	9e bf       	out	0x3e, r25	; 62
 34a:	0f be       	out	0x3f, r0	; 63
 34c:	8d bf       	out	0x3d, r24	; 61
 34e:	08 95       	ret

00000350 <init_data_contor>:

#include "main_mcu_init.h"


void init_data_contor(void){
	contor_sec_1 = timp_sec_1;
 350:	88 ee       	ldi	r24, 0xE8	; 232
 352:	93 e0       	ldi	r25, 0x03	; 3
 354:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <contor_sec_1+0x1>
 358:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <contor_sec_1>
 35c:	08 95       	ret

0000035e <timer0_init>:


//Pentru registrii timerului
void timer0_init(void){
	
	TCCR0A |= (1 << WGM01);
 35e:	84 b5       	in	r24, 0x24	; 36
 360:	82 60       	ori	r24, 0x02	; 2
 362:	84 bd       	out	0x24, r24	; 36
	
	TCCR0B |= (0 << CS02)|(1 << CS01)|(1 << CS00);
 364:	85 b5       	in	r24, 0x25	; 37
 366:	83 60       	ori	r24, 0x03	; 3
 368:	85 bd       	out	0x25, r24	; 37

	OCR0A = 0xF9;
 36a:	89 ef       	ldi	r24, 0xF9	; 249
 36c:	87 bd       	out	0x27, r24	; 39
	
	TIMSK0 |= 1 << OCIE0A;
 36e:	ee e6       	ldi	r30, 0x6E	; 110
 370:	f0 e0       	ldi	r31, 0x00	; 0
 372:	80 81       	ld	r24, Z
 374:	82 60       	ori	r24, 0x02	; 2
 376:	80 83       	st	Z, r24
 378:	08 95       	ret

0000037a <init_timer>:
}


void init_timer(void)
{
	cli();
 37a:	f8 94       	cli

	timer0_init();
 37c:	0e 94 af 01 	call	0x35e	; 0x35e <timer0_init>
	
	sei();
 380:	78 94       	sei
 382:	08 95       	ret

00000384 <sprintf>:
 384:	ae e0       	ldi	r26, 0x0E	; 14
 386:	b0 e0       	ldi	r27, 0x00	; 0
 388:	e8 ec       	ldi	r30, 0xC8	; 200
 38a:	f1 e0       	ldi	r31, 0x01	; 1
 38c:	0c 94 83 04 	jmp	0x906	; 0x906 <__stack+0x7>
 390:	0d 89       	ldd	r16, Y+21	; 0x15
 392:	1e 89       	ldd	r17, Y+22	; 0x16
 394:	86 e0       	ldi	r24, 0x06	; 6
 396:	8c 83       	std	Y+4, r24	; 0x04
 398:	1a 83       	std	Y+2, r17	; 0x02
 39a:	09 83       	std	Y+1, r16	; 0x01
 39c:	8f ef       	ldi	r24, 0xFF	; 255
 39e:	9f e7       	ldi	r25, 0x7F	; 127
 3a0:	9e 83       	std	Y+6, r25	; 0x06
 3a2:	8d 83       	std	Y+5, r24	; 0x05
 3a4:	ae 01       	movw	r20, r28
 3a6:	47 5e       	subi	r20, 0xE7	; 231
 3a8:	5f 4f       	sbci	r21, 0xFF	; 255
 3aa:	6f 89       	ldd	r22, Y+23	; 0x17
 3ac:	78 8d       	ldd	r23, Y+24	; 0x18
 3ae:	ce 01       	movw	r24, r28
 3b0:	01 96       	adiw	r24, 0x01	; 1
 3b2:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <vfprintf>
 3b6:	ef 81       	ldd	r30, Y+7	; 0x07
 3b8:	f8 85       	ldd	r31, Y+8	; 0x08
 3ba:	e0 0f       	add	r30, r16
 3bc:	f1 1f       	adc	r31, r17
 3be:	10 82       	st	Z, r1
 3c0:	2e 96       	adiw	r28, 0x0e	; 14
 3c2:	e4 e0       	ldi	r30, 0x04	; 4
 3c4:	0c 94 9f 04 	jmp	0x93e	; 0x93e <__epilogue_restores__+0x1c>

000003c8 <vfprintf>:
 3c8:	ab e0       	ldi	r26, 0x0B	; 11
 3ca:	b0 e0       	ldi	r27, 0x00	; 0
 3cc:	ea ee       	ldi	r30, 0xEA	; 234
 3ce:	f1 e0       	ldi	r31, 0x01	; 1
 3d0:	0c 94 75 04 	jmp	0x8ea	; 0x8ea <__prologue_saves__>
 3d4:	6c 01       	movw	r12, r24
 3d6:	7b 01       	movw	r14, r22
 3d8:	8a 01       	movw	r16, r20
 3da:	fc 01       	movw	r30, r24
 3dc:	17 82       	std	Z+7, r1	; 0x07
 3de:	16 82       	std	Z+6, r1	; 0x06
 3e0:	83 81       	ldd	r24, Z+3	; 0x03
 3e2:	81 ff       	sbrs	r24, 1
 3e4:	cc c1       	rjmp	.+920    	; 0x77e <__EEPROM_REGION_LENGTH__+0x37e>
 3e6:	ce 01       	movw	r24, r28
 3e8:	01 96       	adiw	r24, 0x01	; 1
 3ea:	3c 01       	movw	r6, r24
 3ec:	f6 01       	movw	r30, r12
 3ee:	93 81       	ldd	r25, Z+3	; 0x03
 3f0:	f7 01       	movw	r30, r14
 3f2:	93 fd       	sbrc	r25, 3
 3f4:	85 91       	lpm	r24, Z+
 3f6:	93 ff       	sbrs	r25, 3
 3f8:	81 91       	ld	r24, Z+
 3fa:	7f 01       	movw	r14, r30
 3fc:	88 23       	and	r24, r24
 3fe:	09 f4       	brne	.+2      	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
 400:	ba c1       	rjmp	.+884    	; 0x776 <__EEPROM_REGION_LENGTH__+0x376>
 402:	85 32       	cpi	r24, 0x25	; 37
 404:	39 f4       	brne	.+14     	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
 406:	93 fd       	sbrc	r25, 3
 408:	85 91       	lpm	r24, Z+
 40a:	93 ff       	sbrs	r25, 3
 40c:	81 91       	ld	r24, Z+
 40e:	7f 01       	movw	r14, r30
 410:	85 32       	cpi	r24, 0x25	; 37
 412:	29 f4       	brne	.+10     	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
 414:	b6 01       	movw	r22, r12
 416:	90 e0       	ldi	r25, 0x00	; 0
 418:	0e 94 db 03 	call	0x7b6	; 0x7b6 <fputc>
 41c:	e7 cf       	rjmp	.-50     	; 0x3ec <vfprintf+0x24>
 41e:	91 2c       	mov	r9, r1
 420:	21 2c       	mov	r2, r1
 422:	31 2c       	mov	r3, r1
 424:	ff e1       	ldi	r31, 0x1F	; 31
 426:	f3 15       	cp	r31, r3
 428:	d8 f0       	brcs	.+54     	; 0x460 <__EEPROM_REGION_LENGTH__+0x60>
 42a:	8b 32       	cpi	r24, 0x2B	; 43
 42c:	79 f0       	breq	.+30     	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
 42e:	38 f4       	brcc	.+14     	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
 430:	80 32       	cpi	r24, 0x20	; 32
 432:	79 f0       	breq	.+30     	; 0x452 <__EEPROM_REGION_LENGTH__+0x52>
 434:	83 32       	cpi	r24, 0x23	; 35
 436:	a1 f4       	brne	.+40     	; 0x460 <__EEPROM_REGION_LENGTH__+0x60>
 438:	23 2d       	mov	r18, r3
 43a:	20 61       	ori	r18, 0x10	; 16
 43c:	1d c0       	rjmp	.+58     	; 0x478 <__EEPROM_REGION_LENGTH__+0x78>
 43e:	8d 32       	cpi	r24, 0x2D	; 45
 440:	61 f0       	breq	.+24     	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
 442:	80 33       	cpi	r24, 0x30	; 48
 444:	69 f4       	brne	.+26     	; 0x460 <__EEPROM_REGION_LENGTH__+0x60>
 446:	23 2d       	mov	r18, r3
 448:	21 60       	ori	r18, 0x01	; 1
 44a:	16 c0       	rjmp	.+44     	; 0x478 <__EEPROM_REGION_LENGTH__+0x78>
 44c:	83 2d       	mov	r24, r3
 44e:	82 60       	ori	r24, 0x02	; 2
 450:	38 2e       	mov	r3, r24
 452:	e3 2d       	mov	r30, r3
 454:	e4 60       	ori	r30, 0x04	; 4
 456:	3e 2e       	mov	r3, r30
 458:	2a c0       	rjmp	.+84     	; 0x4ae <__EEPROM_REGION_LENGTH__+0xae>
 45a:	f3 2d       	mov	r31, r3
 45c:	f8 60       	ori	r31, 0x08	; 8
 45e:	1d c0       	rjmp	.+58     	; 0x49a <__EEPROM_REGION_LENGTH__+0x9a>
 460:	37 fc       	sbrc	r3, 7
 462:	2d c0       	rjmp	.+90     	; 0x4be <__EEPROM_REGION_LENGTH__+0xbe>
 464:	20 ed       	ldi	r18, 0xD0	; 208
 466:	28 0f       	add	r18, r24
 468:	2a 30       	cpi	r18, 0x0A	; 10
 46a:	40 f0       	brcs	.+16     	; 0x47c <__EEPROM_REGION_LENGTH__+0x7c>
 46c:	8e 32       	cpi	r24, 0x2E	; 46
 46e:	b9 f4       	brne	.+46     	; 0x49e <__EEPROM_REGION_LENGTH__+0x9e>
 470:	36 fc       	sbrc	r3, 6
 472:	81 c1       	rjmp	.+770    	; 0x776 <__EEPROM_REGION_LENGTH__+0x376>
 474:	23 2d       	mov	r18, r3
 476:	20 64       	ori	r18, 0x40	; 64
 478:	32 2e       	mov	r3, r18
 47a:	19 c0       	rjmp	.+50     	; 0x4ae <__EEPROM_REGION_LENGTH__+0xae>
 47c:	36 fe       	sbrs	r3, 6
 47e:	06 c0       	rjmp	.+12     	; 0x48c <__EEPROM_REGION_LENGTH__+0x8c>
 480:	8a e0       	ldi	r24, 0x0A	; 10
 482:	98 9e       	mul	r9, r24
 484:	20 0d       	add	r18, r0
 486:	11 24       	eor	r1, r1
 488:	92 2e       	mov	r9, r18
 48a:	11 c0       	rjmp	.+34     	; 0x4ae <__EEPROM_REGION_LENGTH__+0xae>
 48c:	ea e0       	ldi	r30, 0x0A	; 10
 48e:	2e 9e       	mul	r2, r30
 490:	20 0d       	add	r18, r0
 492:	11 24       	eor	r1, r1
 494:	22 2e       	mov	r2, r18
 496:	f3 2d       	mov	r31, r3
 498:	f0 62       	ori	r31, 0x20	; 32
 49a:	3f 2e       	mov	r3, r31
 49c:	08 c0       	rjmp	.+16     	; 0x4ae <__EEPROM_REGION_LENGTH__+0xae>
 49e:	8c 36       	cpi	r24, 0x6C	; 108
 4a0:	21 f4       	brne	.+8      	; 0x4aa <__EEPROM_REGION_LENGTH__+0xaa>
 4a2:	83 2d       	mov	r24, r3
 4a4:	80 68       	ori	r24, 0x80	; 128
 4a6:	38 2e       	mov	r3, r24
 4a8:	02 c0       	rjmp	.+4      	; 0x4ae <__EEPROM_REGION_LENGTH__+0xae>
 4aa:	88 36       	cpi	r24, 0x68	; 104
 4ac:	41 f4       	brne	.+16     	; 0x4be <__EEPROM_REGION_LENGTH__+0xbe>
 4ae:	f7 01       	movw	r30, r14
 4b0:	93 fd       	sbrc	r25, 3
 4b2:	85 91       	lpm	r24, Z+
 4b4:	93 ff       	sbrs	r25, 3
 4b6:	81 91       	ld	r24, Z+
 4b8:	7f 01       	movw	r14, r30
 4ba:	81 11       	cpse	r24, r1
 4bc:	b3 cf       	rjmp	.-154    	; 0x424 <__EEPROM_REGION_LENGTH__+0x24>
 4be:	98 2f       	mov	r25, r24
 4c0:	9f 7d       	andi	r25, 0xDF	; 223
 4c2:	95 54       	subi	r25, 0x45	; 69
 4c4:	93 30       	cpi	r25, 0x03	; 3
 4c6:	28 f4       	brcc	.+10     	; 0x4d2 <__EEPROM_REGION_LENGTH__+0xd2>
 4c8:	0c 5f       	subi	r16, 0xFC	; 252
 4ca:	1f 4f       	sbci	r17, 0xFF	; 255
 4cc:	9f e3       	ldi	r25, 0x3F	; 63
 4ce:	99 83       	std	Y+1, r25	; 0x01
 4d0:	0d c0       	rjmp	.+26     	; 0x4ec <__EEPROM_REGION_LENGTH__+0xec>
 4d2:	83 36       	cpi	r24, 0x63	; 99
 4d4:	31 f0       	breq	.+12     	; 0x4e2 <__EEPROM_REGION_LENGTH__+0xe2>
 4d6:	83 37       	cpi	r24, 0x73	; 115
 4d8:	71 f0       	breq	.+28     	; 0x4f6 <__EEPROM_REGION_LENGTH__+0xf6>
 4da:	83 35       	cpi	r24, 0x53	; 83
 4dc:	09 f0       	breq	.+2      	; 0x4e0 <__EEPROM_REGION_LENGTH__+0xe0>
 4de:	59 c0       	rjmp	.+178    	; 0x592 <__EEPROM_REGION_LENGTH__+0x192>
 4e0:	21 c0       	rjmp	.+66     	; 0x524 <__EEPROM_REGION_LENGTH__+0x124>
 4e2:	f8 01       	movw	r30, r16
 4e4:	80 81       	ld	r24, Z
 4e6:	89 83       	std	Y+1, r24	; 0x01
 4e8:	0e 5f       	subi	r16, 0xFE	; 254
 4ea:	1f 4f       	sbci	r17, 0xFF	; 255
 4ec:	88 24       	eor	r8, r8
 4ee:	83 94       	inc	r8
 4f0:	91 2c       	mov	r9, r1
 4f2:	53 01       	movw	r10, r6
 4f4:	13 c0       	rjmp	.+38     	; 0x51c <__EEPROM_REGION_LENGTH__+0x11c>
 4f6:	28 01       	movw	r4, r16
 4f8:	f2 e0       	ldi	r31, 0x02	; 2
 4fa:	4f 0e       	add	r4, r31
 4fc:	51 1c       	adc	r5, r1
 4fe:	f8 01       	movw	r30, r16
 500:	a0 80       	ld	r10, Z
 502:	b1 80       	ldd	r11, Z+1	; 0x01
 504:	36 fe       	sbrs	r3, 6
 506:	03 c0       	rjmp	.+6      	; 0x50e <__EEPROM_REGION_LENGTH__+0x10e>
 508:	69 2d       	mov	r22, r9
 50a:	70 e0       	ldi	r23, 0x00	; 0
 50c:	02 c0       	rjmp	.+4      	; 0x512 <__EEPROM_REGION_LENGTH__+0x112>
 50e:	6f ef       	ldi	r22, 0xFF	; 255
 510:	7f ef       	ldi	r23, 0xFF	; 255
 512:	c5 01       	movw	r24, r10
 514:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <strnlen>
 518:	4c 01       	movw	r8, r24
 51a:	82 01       	movw	r16, r4
 51c:	f3 2d       	mov	r31, r3
 51e:	ff 77       	andi	r31, 0x7F	; 127
 520:	3f 2e       	mov	r3, r31
 522:	16 c0       	rjmp	.+44     	; 0x550 <__EEPROM_REGION_LENGTH__+0x150>
 524:	28 01       	movw	r4, r16
 526:	22 e0       	ldi	r18, 0x02	; 2
 528:	42 0e       	add	r4, r18
 52a:	51 1c       	adc	r5, r1
 52c:	f8 01       	movw	r30, r16
 52e:	a0 80       	ld	r10, Z
 530:	b1 80       	ldd	r11, Z+1	; 0x01
 532:	36 fe       	sbrs	r3, 6
 534:	03 c0       	rjmp	.+6      	; 0x53c <__EEPROM_REGION_LENGTH__+0x13c>
 536:	69 2d       	mov	r22, r9
 538:	70 e0       	ldi	r23, 0x00	; 0
 53a:	02 c0       	rjmp	.+4      	; 0x540 <__EEPROM_REGION_LENGTH__+0x140>
 53c:	6f ef       	ldi	r22, 0xFF	; 255
 53e:	7f ef       	ldi	r23, 0xFF	; 255
 540:	c5 01       	movw	r24, r10
 542:	0e 94 c5 03 	call	0x78a	; 0x78a <strnlen_P>
 546:	4c 01       	movw	r8, r24
 548:	f3 2d       	mov	r31, r3
 54a:	f0 68       	ori	r31, 0x80	; 128
 54c:	3f 2e       	mov	r3, r31
 54e:	82 01       	movw	r16, r4
 550:	33 fc       	sbrc	r3, 3
 552:	1b c0       	rjmp	.+54     	; 0x58a <__EEPROM_REGION_LENGTH__+0x18a>
 554:	82 2d       	mov	r24, r2
 556:	90 e0       	ldi	r25, 0x00	; 0
 558:	88 16       	cp	r8, r24
 55a:	99 06       	cpc	r9, r25
 55c:	b0 f4       	brcc	.+44     	; 0x58a <__EEPROM_REGION_LENGTH__+0x18a>
 55e:	b6 01       	movw	r22, r12
 560:	80 e2       	ldi	r24, 0x20	; 32
 562:	90 e0       	ldi	r25, 0x00	; 0
 564:	0e 94 db 03 	call	0x7b6	; 0x7b6 <fputc>
 568:	2a 94       	dec	r2
 56a:	f4 cf       	rjmp	.-24     	; 0x554 <__EEPROM_REGION_LENGTH__+0x154>
 56c:	f5 01       	movw	r30, r10
 56e:	37 fc       	sbrc	r3, 7
 570:	85 91       	lpm	r24, Z+
 572:	37 fe       	sbrs	r3, 7
 574:	81 91       	ld	r24, Z+
 576:	5f 01       	movw	r10, r30
 578:	b6 01       	movw	r22, r12
 57a:	90 e0       	ldi	r25, 0x00	; 0
 57c:	0e 94 db 03 	call	0x7b6	; 0x7b6 <fputc>
 580:	21 10       	cpse	r2, r1
 582:	2a 94       	dec	r2
 584:	21 e0       	ldi	r18, 0x01	; 1
 586:	82 1a       	sub	r8, r18
 588:	91 08       	sbc	r9, r1
 58a:	81 14       	cp	r8, r1
 58c:	91 04       	cpc	r9, r1
 58e:	71 f7       	brne	.-36     	; 0x56c <__EEPROM_REGION_LENGTH__+0x16c>
 590:	e8 c0       	rjmp	.+464    	; 0x762 <__EEPROM_REGION_LENGTH__+0x362>
 592:	84 36       	cpi	r24, 0x64	; 100
 594:	11 f0       	breq	.+4      	; 0x59a <__EEPROM_REGION_LENGTH__+0x19a>
 596:	89 36       	cpi	r24, 0x69	; 105
 598:	41 f5       	brne	.+80     	; 0x5ea <__EEPROM_REGION_LENGTH__+0x1ea>
 59a:	f8 01       	movw	r30, r16
 59c:	37 fe       	sbrs	r3, 7
 59e:	07 c0       	rjmp	.+14     	; 0x5ae <__EEPROM_REGION_LENGTH__+0x1ae>
 5a0:	60 81       	ld	r22, Z
 5a2:	71 81       	ldd	r23, Z+1	; 0x01
 5a4:	82 81       	ldd	r24, Z+2	; 0x02
 5a6:	93 81       	ldd	r25, Z+3	; 0x03
 5a8:	0c 5f       	subi	r16, 0xFC	; 252
 5aa:	1f 4f       	sbci	r17, 0xFF	; 255
 5ac:	08 c0       	rjmp	.+16     	; 0x5be <__EEPROM_REGION_LENGTH__+0x1be>
 5ae:	60 81       	ld	r22, Z
 5b0:	71 81       	ldd	r23, Z+1	; 0x01
 5b2:	07 2e       	mov	r0, r23
 5b4:	00 0c       	add	r0, r0
 5b6:	88 0b       	sbc	r24, r24
 5b8:	99 0b       	sbc	r25, r25
 5ba:	0e 5f       	subi	r16, 0xFE	; 254
 5bc:	1f 4f       	sbci	r17, 0xFF	; 255
 5be:	f3 2d       	mov	r31, r3
 5c0:	ff 76       	andi	r31, 0x6F	; 111
 5c2:	3f 2e       	mov	r3, r31
 5c4:	97 ff       	sbrs	r25, 7
 5c6:	09 c0       	rjmp	.+18     	; 0x5da <__EEPROM_REGION_LENGTH__+0x1da>
 5c8:	90 95       	com	r25
 5ca:	80 95       	com	r24
 5cc:	70 95       	com	r23
 5ce:	61 95       	neg	r22
 5d0:	7f 4f       	sbci	r23, 0xFF	; 255
 5d2:	8f 4f       	sbci	r24, 0xFF	; 255
 5d4:	9f 4f       	sbci	r25, 0xFF	; 255
 5d6:	f0 68       	ori	r31, 0x80	; 128
 5d8:	3f 2e       	mov	r3, r31
 5da:	2a e0       	ldi	r18, 0x0A	; 10
 5dc:	30 e0       	ldi	r19, 0x00	; 0
 5de:	a3 01       	movw	r20, r6
 5e0:	0e 94 17 04 	call	0x82e	; 0x82e <__ultoa_invert>
 5e4:	88 2e       	mov	r8, r24
 5e6:	86 18       	sub	r8, r6
 5e8:	45 c0       	rjmp	.+138    	; 0x674 <__EEPROM_REGION_LENGTH__+0x274>
 5ea:	85 37       	cpi	r24, 0x75	; 117
 5ec:	31 f4       	brne	.+12     	; 0x5fa <__EEPROM_REGION_LENGTH__+0x1fa>
 5ee:	23 2d       	mov	r18, r3
 5f0:	2f 7e       	andi	r18, 0xEF	; 239
 5f2:	b2 2e       	mov	r11, r18
 5f4:	2a e0       	ldi	r18, 0x0A	; 10
 5f6:	30 e0       	ldi	r19, 0x00	; 0
 5f8:	25 c0       	rjmp	.+74     	; 0x644 <__EEPROM_REGION_LENGTH__+0x244>
 5fa:	93 2d       	mov	r25, r3
 5fc:	99 7f       	andi	r25, 0xF9	; 249
 5fe:	b9 2e       	mov	r11, r25
 600:	8f 36       	cpi	r24, 0x6F	; 111
 602:	c1 f0       	breq	.+48     	; 0x634 <__EEPROM_REGION_LENGTH__+0x234>
 604:	18 f4       	brcc	.+6      	; 0x60c <__EEPROM_REGION_LENGTH__+0x20c>
 606:	88 35       	cpi	r24, 0x58	; 88
 608:	79 f0       	breq	.+30     	; 0x628 <__EEPROM_REGION_LENGTH__+0x228>
 60a:	b5 c0       	rjmp	.+362    	; 0x776 <__EEPROM_REGION_LENGTH__+0x376>
 60c:	80 37       	cpi	r24, 0x70	; 112
 60e:	19 f0       	breq	.+6      	; 0x616 <__EEPROM_REGION_LENGTH__+0x216>
 610:	88 37       	cpi	r24, 0x78	; 120
 612:	21 f0       	breq	.+8      	; 0x61c <__EEPROM_REGION_LENGTH__+0x21c>
 614:	b0 c0       	rjmp	.+352    	; 0x776 <__EEPROM_REGION_LENGTH__+0x376>
 616:	e9 2f       	mov	r30, r25
 618:	e0 61       	ori	r30, 0x10	; 16
 61a:	be 2e       	mov	r11, r30
 61c:	b4 fe       	sbrs	r11, 4
 61e:	0d c0       	rjmp	.+26     	; 0x63a <__EEPROM_REGION_LENGTH__+0x23a>
 620:	fb 2d       	mov	r31, r11
 622:	f4 60       	ori	r31, 0x04	; 4
 624:	bf 2e       	mov	r11, r31
 626:	09 c0       	rjmp	.+18     	; 0x63a <__EEPROM_REGION_LENGTH__+0x23a>
 628:	34 fe       	sbrs	r3, 4
 62a:	0a c0       	rjmp	.+20     	; 0x640 <__EEPROM_REGION_LENGTH__+0x240>
 62c:	29 2f       	mov	r18, r25
 62e:	26 60       	ori	r18, 0x06	; 6
 630:	b2 2e       	mov	r11, r18
 632:	06 c0       	rjmp	.+12     	; 0x640 <__EEPROM_REGION_LENGTH__+0x240>
 634:	28 e0       	ldi	r18, 0x08	; 8
 636:	30 e0       	ldi	r19, 0x00	; 0
 638:	05 c0       	rjmp	.+10     	; 0x644 <__EEPROM_REGION_LENGTH__+0x244>
 63a:	20 e1       	ldi	r18, 0x10	; 16
 63c:	30 e0       	ldi	r19, 0x00	; 0
 63e:	02 c0       	rjmp	.+4      	; 0x644 <__EEPROM_REGION_LENGTH__+0x244>
 640:	20 e1       	ldi	r18, 0x10	; 16
 642:	32 e0       	ldi	r19, 0x02	; 2
 644:	f8 01       	movw	r30, r16
 646:	b7 fe       	sbrs	r11, 7
 648:	07 c0       	rjmp	.+14     	; 0x658 <__EEPROM_REGION_LENGTH__+0x258>
 64a:	60 81       	ld	r22, Z
 64c:	71 81       	ldd	r23, Z+1	; 0x01
 64e:	82 81       	ldd	r24, Z+2	; 0x02
 650:	93 81       	ldd	r25, Z+3	; 0x03
 652:	0c 5f       	subi	r16, 0xFC	; 252
 654:	1f 4f       	sbci	r17, 0xFF	; 255
 656:	06 c0       	rjmp	.+12     	; 0x664 <__EEPROM_REGION_LENGTH__+0x264>
 658:	60 81       	ld	r22, Z
 65a:	71 81       	ldd	r23, Z+1	; 0x01
 65c:	80 e0       	ldi	r24, 0x00	; 0
 65e:	90 e0       	ldi	r25, 0x00	; 0
 660:	0e 5f       	subi	r16, 0xFE	; 254
 662:	1f 4f       	sbci	r17, 0xFF	; 255
 664:	a3 01       	movw	r20, r6
 666:	0e 94 17 04 	call	0x82e	; 0x82e <__ultoa_invert>
 66a:	88 2e       	mov	r8, r24
 66c:	86 18       	sub	r8, r6
 66e:	fb 2d       	mov	r31, r11
 670:	ff 77       	andi	r31, 0x7F	; 127
 672:	3f 2e       	mov	r3, r31
 674:	36 fe       	sbrs	r3, 6
 676:	0d c0       	rjmp	.+26     	; 0x692 <__EEPROM_REGION_LENGTH__+0x292>
 678:	23 2d       	mov	r18, r3
 67a:	2e 7f       	andi	r18, 0xFE	; 254
 67c:	a2 2e       	mov	r10, r18
 67e:	89 14       	cp	r8, r9
 680:	58 f4       	brcc	.+22     	; 0x698 <__EEPROM_REGION_LENGTH__+0x298>
 682:	34 fe       	sbrs	r3, 4
 684:	0b c0       	rjmp	.+22     	; 0x69c <__EEPROM_REGION_LENGTH__+0x29c>
 686:	32 fc       	sbrc	r3, 2
 688:	09 c0       	rjmp	.+18     	; 0x69c <__EEPROM_REGION_LENGTH__+0x29c>
 68a:	83 2d       	mov	r24, r3
 68c:	8e 7e       	andi	r24, 0xEE	; 238
 68e:	a8 2e       	mov	r10, r24
 690:	05 c0       	rjmp	.+10     	; 0x69c <__EEPROM_REGION_LENGTH__+0x29c>
 692:	b8 2c       	mov	r11, r8
 694:	a3 2c       	mov	r10, r3
 696:	03 c0       	rjmp	.+6      	; 0x69e <__EEPROM_REGION_LENGTH__+0x29e>
 698:	b8 2c       	mov	r11, r8
 69a:	01 c0       	rjmp	.+2      	; 0x69e <__EEPROM_REGION_LENGTH__+0x29e>
 69c:	b9 2c       	mov	r11, r9
 69e:	a4 fe       	sbrs	r10, 4
 6a0:	0f c0       	rjmp	.+30     	; 0x6c0 <__EEPROM_REGION_LENGTH__+0x2c0>
 6a2:	fe 01       	movw	r30, r28
 6a4:	e8 0d       	add	r30, r8
 6a6:	f1 1d       	adc	r31, r1
 6a8:	80 81       	ld	r24, Z
 6aa:	80 33       	cpi	r24, 0x30	; 48
 6ac:	21 f4       	brne	.+8      	; 0x6b6 <__EEPROM_REGION_LENGTH__+0x2b6>
 6ae:	9a 2d       	mov	r25, r10
 6b0:	99 7e       	andi	r25, 0xE9	; 233
 6b2:	a9 2e       	mov	r10, r25
 6b4:	09 c0       	rjmp	.+18     	; 0x6c8 <__EEPROM_REGION_LENGTH__+0x2c8>
 6b6:	a2 fe       	sbrs	r10, 2
 6b8:	06 c0       	rjmp	.+12     	; 0x6c6 <__EEPROM_REGION_LENGTH__+0x2c6>
 6ba:	b3 94       	inc	r11
 6bc:	b3 94       	inc	r11
 6be:	04 c0       	rjmp	.+8      	; 0x6c8 <__EEPROM_REGION_LENGTH__+0x2c8>
 6c0:	8a 2d       	mov	r24, r10
 6c2:	86 78       	andi	r24, 0x86	; 134
 6c4:	09 f0       	breq	.+2      	; 0x6c8 <__EEPROM_REGION_LENGTH__+0x2c8>
 6c6:	b3 94       	inc	r11
 6c8:	a3 fc       	sbrc	r10, 3
 6ca:	11 c0       	rjmp	.+34     	; 0x6ee <__EEPROM_REGION_LENGTH__+0x2ee>
 6cc:	a0 fe       	sbrs	r10, 0
 6ce:	06 c0       	rjmp	.+12     	; 0x6dc <__EEPROM_REGION_LENGTH__+0x2dc>
 6d0:	b2 14       	cp	r11, r2
 6d2:	88 f4       	brcc	.+34     	; 0x6f6 <__EEPROM_REGION_LENGTH__+0x2f6>
 6d4:	28 0c       	add	r2, r8
 6d6:	92 2c       	mov	r9, r2
 6d8:	9b 18       	sub	r9, r11
 6da:	0e c0       	rjmp	.+28     	; 0x6f8 <__EEPROM_REGION_LENGTH__+0x2f8>
 6dc:	b2 14       	cp	r11, r2
 6de:	60 f4       	brcc	.+24     	; 0x6f8 <__EEPROM_REGION_LENGTH__+0x2f8>
 6e0:	b6 01       	movw	r22, r12
 6e2:	80 e2       	ldi	r24, 0x20	; 32
 6e4:	90 e0       	ldi	r25, 0x00	; 0
 6e6:	0e 94 db 03 	call	0x7b6	; 0x7b6 <fputc>
 6ea:	b3 94       	inc	r11
 6ec:	f7 cf       	rjmp	.-18     	; 0x6dc <__EEPROM_REGION_LENGTH__+0x2dc>
 6ee:	b2 14       	cp	r11, r2
 6f0:	18 f4       	brcc	.+6      	; 0x6f8 <__EEPROM_REGION_LENGTH__+0x2f8>
 6f2:	2b 18       	sub	r2, r11
 6f4:	02 c0       	rjmp	.+4      	; 0x6fa <__EEPROM_REGION_LENGTH__+0x2fa>
 6f6:	98 2c       	mov	r9, r8
 6f8:	21 2c       	mov	r2, r1
 6fa:	a4 fe       	sbrs	r10, 4
 6fc:	10 c0       	rjmp	.+32     	; 0x71e <__EEPROM_REGION_LENGTH__+0x31e>
 6fe:	b6 01       	movw	r22, r12
 700:	80 e3       	ldi	r24, 0x30	; 48
 702:	90 e0       	ldi	r25, 0x00	; 0
 704:	0e 94 db 03 	call	0x7b6	; 0x7b6 <fputc>
 708:	a2 fe       	sbrs	r10, 2
 70a:	17 c0       	rjmp	.+46     	; 0x73a <__EEPROM_REGION_LENGTH__+0x33a>
 70c:	a1 fc       	sbrc	r10, 1
 70e:	03 c0       	rjmp	.+6      	; 0x716 <__EEPROM_REGION_LENGTH__+0x316>
 710:	88 e7       	ldi	r24, 0x78	; 120
 712:	90 e0       	ldi	r25, 0x00	; 0
 714:	02 c0       	rjmp	.+4      	; 0x71a <__EEPROM_REGION_LENGTH__+0x31a>
 716:	88 e5       	ldi	r24, 0x58	; 88
 718:	90 e0       	ldi	r25, 0x00	; 0
 71a:	b6 01       	movw	r22, r12
 71c:	0c c0       	rjmp	.+24     	; 0x736 <__EEPROM_REGION_LENGTH__+0x336>
 71e:	8a 2d       	mov	r24, r10
 720:	86 78       	andi	r24, 0x86	; 134
 722:	59 f0       	breq	.+22     	; 0x73a <__EEPROM_REGION_LENGTH__+0x33a>
 724:	a1 fe       	sbrs	r10, 1
 726:	02 c0       	rjmp	.+4      	; 0x72c <__EEPROM_REGION_LENGTH__+0x32c>
 728:	8b e2       	ldi	r24, 0x2B	; 43
 72a:	01 c0       	rjmp	.+2      	; 0x72e <__EEPROM_REGION_LENGTH__+0x32e>
 72c:	80 e2       	ldi	r24, 0x20	; 32
 72e:	a7 fc       	sbrc	r10, 7
 730:	8d e2       	ldi	r24, 0x2D	; 45
 732:	b6 01       	movw	r22, r12
 734:	90 e0       	ldi	r25, 0x00	; 0
 736:	0e 94 db 03 	call	0x7b6	; 0x7b6 <fputc>
 73a:	89 14       	cp	r8, r9
 73c:	38 f4       	brcc	.+14     	; 0x74c <__EEPROM_REGION_LENGTH__+0x34c>
 73e:	b6 01       	movw	r22, r12
 740:	80 e3       	ldi	r24, 0x30	; 48
 742:	90 e0       	ldi	r25, 0x00	; 0
 744:	0e 94 db 03 	call	0x7b6	; 0x7b6 <fputc>
 748:	9a 94       	dec	r9
 74a:	f7 cf       	rjmp	.-18     	; 0x73a <__EEPROM_REGION_LENGTH__+0x33a>
 74c:	8a 94       	dec	r8
 74e:	f3 01       	movw	r30, r6
 750:	e8 0d       	add	r30, r8
 752:	f1 1d       	adc	r31, r1
 754:	80 81       	ld	r24, Z
 756:	b6 01       	movw	r22, r12
 758:	90 e0       	ldi	r25, 0x00	; 0
 75a:	0e 94 db 03 	call	0x7b6	; 0x7b6 <fputc>
 75e:	81 10       	cpse	r8, r1
 760:	f5 cf       	rjmp	.-22     	; 0x74c <__EEPROM_REGION_LENGTH__+0x34c>
 762:	22 20       	and	r2, r2
 764:	09 f4       	brne	.+2      	; 0x768 <__EEPROM_REGION_LENGTH__+0x368>
 766:	42 ce       	rjmp	.-892    	; 0x3ec <vfprintf+0x24>
 768:	b6 01       	movw	r22, r12
 76a:	80 e2       	ldi	r24, 0x20	; 32
 76c:	90 e0       	ldi	r25, 0x00	; 0
 76e:	0e 94 db 03 	call	0x7b6	; 0x7b6 <fputc>
 772:	2a 94       	dec	r2
 774:	f6 cf       	rjmp	.-20     	; 0x762 <__EEPROM_REGION_LENGTH__+0x362>
 776:	f6 01       	movw	r30, r12
 778:	86 81       	ldd	r24, Z+6	; 0x06
 77a:	97 81       	ldd	r25, Z+7	; 0x07
 77c:	02 c0       	rjmp	.+4      	; 0x782 <__EEPROM_REGION_LENGTH__+0x382>
 77e:	8f ef       	ldi	r24, 0xFF	; 255
 780:	9f ef       	ldi	r25, 0xFF	; 255
 782:	2b 96       	adiw	r28, 0x0b	; 11
 784:	e2 e1       	ldi	r30, 0x12	; 18
 786:	0c 94 91 04 	jmp	0x922	; 0x922 <__epilogue_restores__>

0000078a <strnlen_P>:
 78a:	fc 01       	movw	r30, r24
 78c:	05 90       	lpm	r0, Z+
 78e:	61 50       	subi	r22, 0x01	; 1
 790:	70 40       	sbci	r23, 0x00	; 0
 792:	01 10       	cpse	r0, r1
 794:	d8 f7       	brcc	.-10     	; 0x78c <strnlen_P+0x2>
 796:	80 95       	com	r24
 798:	90 95       	com	r25
 79a:	8e 0f       	add	r24, r30
 79c:	9f 1f       	adc	r25, r31
 79e:	08 95       	ret

000007a0 <strnlen>:
 7a0:	fc 01       	movw	r30, r24
 7a2:	61 50       	subi	r22, 0x01	; 1
 7a4:	70 40       	sbci	r23, 0x00	; 0
 7a6:	01 90       	ld	r0, Z+
 7a8:	01 10       	cpse	r0, r1
 7aa:	d8 f7       	brcc	.-10     	; 0x7a2 <strnlen+0x2>
 7ac:	80 95       	com	r24
 7ae:	90 95       	com	r25
 7b0:	8e 0f       	add	r24, r30
 7b2:	9f 1f       	adc	r25, r31
 7b4:	08 95       	ret

000007b6 <fputc>:
 7b6:	0f 93       	push	r16
 7b8:	1f 93       	push	r17
 7ba:	cf 93       	push	r28
 7bc:	df 93       	push	r29
 7be:	fb 01       	movw	r30, r22
 7c0:	23 81       	ldd	r18, Z+3	; 0x03
 7c2:	21 fd       	sbrc	r18, 1
 7c4:	03 c0       	rjmp	.+6      	; 0x7cc <fputc+0x16>
 7c6:	8f ef       	ldi	r24, 0xFF	; 255
 7c8:	9f ef       	ldi	r25, 0xFF	; 255
 7ca:	2c c0       	rjmp	.+88     	; 0x824 <__DATA_REGION_LENGTH__+0x24>
 7cc:	22 ff       	sbrs	r18, 2
 7ce:	16 c0       	rjmp	.+44     	; 0x7fc <fputc+0x46>
 7d0:	46 81       	ldd	r20, Z+6	; 0x06
 7d2:	57 81       	ldd	r21, Z+7	; 0x07
 7d4:	24 81       	ldd	r18, Z+4	; 0x04
 7d6:	35 81       	ldd	r19, Z+5	; 0x05
 7d8:	42 17       	cp	r20, r18
 7da:	53 07       	cpc	r21, r19
 7dc:	44 f4       	brge	.+16     	; 0x7ee <fputc+0x38>
 7de:	a0 81       	ld	r26, Z
 7e0:	b1 81       	ldd	r27, Z+1	; 0x01
 7e2:	9d 01       	movw	r18, r26
 7e4:	2f 5f       	subi	r18, 0xFF	; 255
 7e6:	3f 4f       	sbci	r19, 0xFF	; 255
 7e8:	31 83       	std	Z+1, r19	; 0x01
 7ea:	20 83       	st	Z, r18
 7ec:	8c 93       	st	X, r24
 7ee:	26 81       	ldd	r18, Z+6	; 0x06
 7f0:	37 81       	ldd	r19, Z+7	; 0x07
 7f2:	2f 5f       	subi	r18, 0xFF	; 255
 7f4:	3f 4f       	sbci	r19, 0xFF	; 255
 7f6:	37 83       	std	Z+7, r19	; 0x07
 7f8:	26 83       	std	Z+6, r18	; 0x06
 7fa:	14 c0       	rjmp	.+40     	; 0x824 <__DATA_REGION_LENGTH__+0x24>
 7fc:	8b 01       	movw	r16, r22
 7fe:	ec 01       	movw	r28, r24
 800:	fb 01       	movw	r30, r22
 802:	00 84       	ldd	r0, Z+8	; 0x08
 804:	f1 85       	ldd	r31, Z+9	; 0x09
 806:	e0 2d       	mov	r30, r0
 808:	09 95       	icall
 80a:	89 2b       	or	r24, r25
 80c:	e1 f6       	brne	.-72     	; 0x7c6 <fputc+0x10>
 80e:	d8 01       	movw	r26, r16
 810:	16 96       	adiw	r26, 0x06	; 6
 812:	8d 91       	ld	r24, X+
 814:	9c 91       	ld	r25, X
 816:	17 97       	sbiw	r26, 0x07	; 7
 818:	01 96       	adiw	r24, 0x01	; 1
 81a:	17 96       	adiw	r26, 0x07	; 7
 81c:	9c 93       	st	X, r25
 81e:	8e 93       	st	-X, r24
 820:	16 97       	sbiw	r26, 0x06	; 6
 822:	ce 01       	movw	r24, r28
 824:	df 91       	pop	r29
 826:	cf 91       	pop	r28
 828:	1f 91       	pop	r17
 82a:	0f 91       	pop	r16
 82c:	08 95       	ret

0000082e <__ultoa_invert>:
 82e:	fa 01       	movw	r30, r20
 830:	aa 27       	eor	r26, r26
 832:	28 30       	cpi	r18, 0x08	; 8
 834:	51 f1       	breq	.+84     	; 0x88a <__ultoa_invert+0x5c>
 836:	20 31       	cpi	r18, 0x10	; 16
 838:	81 f1       	breq	.+96     	; 0x89a <__ultoa_invert+0x6c>
 83a:	e8 94       	clt
 83c:	6f 93       	push	r22
 83e:	6e 7f       	andi	r22, 0xFE	; 254
 840:	6e 5f       	subi	r22, 0xFE	; 254
 842:	7f 4f       	sbci	r23, 0xFF	; 255
 844:	8f 4f       	sbci	r24, 0xFF	; 255
 846:	9f 4f       	sbci	r25, 0xFF	; 255
 848:	af 4f       	sbci	r26, 0xFF	; 255
 84a:	b1 e0       	ldi	r27, 0x01	; 1
 84c:	3e d0       	rcall	.+124    	; 0x8ca <__ultoa_invert+0x9c>
 84e:	b4 e0       	ldi	r27, 0x04	; 4
 850:	3c d0       	rcall	.+120    	; 0x8ca <__ultoa_invert+0x9c>
 852:	67 0f       	add	r22, r23
 854:	78 1f       	adc	r23, r24
 856:	89 1f       	adc	r24, r25
 858:	9a 1f       	adc	r25, r26
 85a:	a1 1d       	adc	r26, r1
 85c:	68 0f       	add	r22, r24
 85e:	79 1f       	adc	r23, r25
 860:	8a 1f       	adc	r24, r26
 862:	91 1d       	adc	r25, r1
 864:	a1 1d       	adc	r26, r1
 866:	6a 0f       	add	r22, r26
 868:	71 1d       	adc	r23, r1
 86a:	81 1d       	adc	r24, r1
 86c:	91 1d       	adc	r25, r1
 86e:	a1 1d       	adc	r26, r1
 870:	20 d0       	rcall	.+64     	; 0x8b2 <__ultoa_invert+0x84>
 872:	09 f4       	brne	.+2      	; 0x876 <__ultoa_invert+0x48>
 874:	68 94       	set
 876:	3f 91       	pop	r19
 878:	2a e0       	ldi	r18, 0x0A	; 10
 87a:	26 9f       	mul	r18, r22
 87c:	11 24       	eor	r1, r1
 87e:	30 19       	sub	r19, r0
 880:	30 5d       	subi	r19, 0xD0	; 208
 882:	31 93       	st	Z+, r19
 884:	de f6       	brtc	.-74     	; 0x83c <__ultoa_invert+0xe>
 886:	cf 01       	movw	r24, r30
 888:	08 95       	ret
 88a:	46 2f       	mov	r20, r22
 88c:	47 70       	andi	r20, 0x07	; 7
 88e:	40 5d       	subi	r20, 0xD0	; 208
 890:	41 93       	st	Z+, r20
 892:	b3 e0       	ldi	r27, 0x03	; 3
 894:	0f d0       	rcall	.+30     	; 0x8b4 <__ultoa_invert+0x86>
 896:	c9 f7       	brne	.-14     	; 0x88a <__ultoa_invert+0x5c>
 898:	f6 cf       	rjmp	.-20     	; 0x886 <__ultoa_invert+0x58>
 89a:	46 2f       	mov	r20, r22
 89c:	4f 70       	andi	r20, 0x0F	; 15
 89e:	40 5d       	subi	r20, 0xD0	; 208
 8a0:	4a 33       	cpi	r20, 0x3A	; 58
 8a2:	18 f0       	brcs	.+6      	; 0x8aa <__ultoa_invert+0x7c>
 8a4:	49 5d       	subi	r20, 0xD9	; 217
 8a6:	31 fd       	sbrc	r19, 1
 8a8:	40 52       	subi	r20, 0x20	; 32
 8aa:	41 93       	st	Z+, r20
 8ac:	02 d0       	rcall	.+4      	; 0x8b2 <__ultoa_invert+0x84>
 8ae:	a9 f7       	brne	.-22     	; 0x89a <__ultoa_invert+0x6c>
 8b0:	ea cf       	rjmp	.-44     	; 0x886 <__ultoa_invert+0x58>
 8b2:	b4 e0       	ldi	r27, 0x04	; 4
 8b4:	a6 95       	lsr	r26
 8b6:	97 95       	ror	r25
 8b8:	87 95       	ror	r24
 8ba:	77 95       	ror	r23
 8bc:	67 95       	ror	r22
 8be:	ba 95       	dec	r27
 8c0:	c9 f7       	brne	.-14     	; 0x8b4 <__ultoa_invert+0x86>
 8c2:	00 97       	sbiw	r24, 0x00	; 0
 8c4:	61 05       	cpc	r22, r1
 8c6:	71 05       	cpc	r23, r1
 8c8:	08 95       	ret
 8ca:	9b 01       	movw	r18, r22
 8cc:	ac 01       	movw	r20, r24
 8ce:	0a 2e       	mov	r0, r26
 8d0:	06 94       	lsr	r0
 8d2:	57 95       	ror	r21
 8d4:	47 95       	ror	r20
 8d6:	37 95       	ror	r19
 8d8:	27 95       	ror	r18
 8da:	ba 95       	dec	r27
 8dc:	c9 f7       	brne	.-14     	; 0x8d0 <__ultoa_invert+0xa2>
 8de:	62 0f       	add	r22, r18
 8e0:	73 1f       	adc	r23, r19
 8e2:	84 1f       	adc	r24, r20
 8e4:	95 1f       	adc	r25, r21
 8e6:	a0 1d       	adc	r26, r0
 8e8:	08 95       	ret

000008ea <__prologue_saves__>:
 8ea:	2f 92       	push	r2
 8ec:	3f 92       	push	r3
 8ee:	4f 92       	push	r4
 8f0:	5f 92       	push	r5
 8f2:	6f 92       	push	r6
 8f4:	7f 92       	push	r7
 8f6:	8f 92       	push	r8
 8f8:	9f 92       	push	r9
 8fa:	af 92       	push	r10
 8fc:	bf 92       	push	r11
 8fe:	cf 92       	push	r12
 900:	df 92       	push	r13
 902:	ef 92       	push	r14
 904:	ff 92       	push	r15
 906:	0f 93       	push	r16
 908:	1f 93       	push	r17
 90a:	cf 93       	push	r28
 90c:	df 93       	push	r29
 90e:	cd b7       	in	r28, 0x3d	; 61
 910:	de b7       	in	r29, 0x3e	; 62
 912:	ca 1b       	sub	r28, r26
 914:	db 0b       	sbc	r29, r27
 916:	0f b6       	in	r0, 0x3f	; 63
 918:	f8 94       	cli
 91a:	de bf       	out	0x3e, r29	; 62
 91c:	0f be       	out	0x3f, r0	; 63
 91e:	cd bf       	out	0x3d, r28	; 61
 920:	09 94       	ijmp

00000922 <__epilogue_restores__>:
 922:	2a 88       	ldd	r2, Y+18	; 0x12
 924:	39 88       	ldd	r3, Y+17	; 0x11
 926:	48 88       	ldd	r4, Y+16	; 0x10
 928:	5f 84       	ldd	r5, Y+15	; 0x0f
 92a:	6e 84       	ldd	r6, Y+14	; 0x0e
 92c:	7d 84       	ldd	r7, Y+13	; 0x0d
 92e:	8c 84       	ldd	r8, Y+12	; 0x0c
 930:	9b 84       	ldd	r9, Y+11	; 0x0b
 932:	aa 84       	ldd	r10, Y+10	; 0x0a
 934:	b9 84       	ldd	r11, Y+9	; 0x09
 936:	c8 84       	ldd	r12, Y+8	; 0x08
 938:	df 80       	ldd	r13, Y+7	; 0x07
 93a:	ee 80       	ldd	r14, Y+6	; 0x06
 93c:	fd 80       	ldd	r15, Y+5	; 0x05
 93e:	0c 81       	ldd	r16, Y+4	; 0x04
 940:	1b 81       	ldd	r17, Y+3	; 0x03
 942:	aa 81       	ldd	r26, Y+2	; 0x02
 944:	b9 81       	ldd	r27, Y+1	; 0x01
 946:	ce 0f       	add	r28, r30
 948:	d1 1d       	adc	r29, r1
 94a:	0f b6       	in	r0, 0x3f	; 63
 94c:	f8 94       	cli
 94e:	de bf       	out	0x3e, r29	; 62
 950:	0f be       	out	0x3f, r0	; 63
 952:	cd bf       	out	0x3d, r28	; 61
 954:	ed 01       	movw	r28, r26
 956:	08 95       	ret

00000958 <_exit>:
 958:	f8 94       	cli

0000095a <__stop_program>:
 95a:	ff cf       	rjmp	.-2      	; 0x95a <__stop_program>
