
Test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000002b8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000244  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000017  00800100  00800100  000002b8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000002b8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000002e8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d0  00000000  00000000  00000328  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001010  00000000  00000000  000003f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008ec  00000000  00000000  00001408  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000075c  00000000  00000000  00001cf4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000184  00000000  00000000  00002450  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000504  00000000  00000000  000025d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000052c  00000000  00000000  00002ad8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a0  00000000  00000000  00003004  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__vector_14>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e4 e4       	ldi	r30, 0x44	; 68
  7c:	f2 e0       	ldi	r31, 0x02	; 2
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 30       	cpi	r26, 0x00	; 0
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a0 e0       	ldi	r26, 0x00	; 0
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a7 31       	cpi	r26, 0x17	; 23
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 53 00 	call	0xa6	; 0xa6 <main>
  9e:	0c 94 20 01 	jmp	0x240	; 0x240 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <main>:
#include <avr/interrupt.h>


int main()
{
	sec_1 = 0;
  a6:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <sec_1>
	min_1 = 0;
  aa:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
	h_1 = 0;
  ae:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <h_1>
	
	initialize();
  b2:	0e 94 c1 00 	call	0x182	; 0x182 <initialize>
// 	_delay_ms(500);
// 	lcd_clear();
// 	_delay_ms(500);
// 	lcd_print("TEST");
// 	_delay_ms(500);
	init_data();
  b6:	0e 94 62 00 	call	0xc4	; 0xc4 <init_data>
	init_timer();
  ba:	0e 94 1b 01 	call	0x236	; 0x236 <init_timer>
	
 	while(1)
	{
 	aprinde_led_1();
  be:	0e 94 fd 00 	call	0x1fa	; 0x1fa <aprinde_led_1>
  c2:	fd cf       	rjmp	.-6      	; 0xbe <main+0x18>

000000c4 <init_data>:
  c4:	88 ee       	ldi	r24, 0xE8	; 232
  c6:	93 e0       	ldi	r25, 0x03	; 3
  c8:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <contor_sec_1+0x1>
  cc:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <contor_sec_1>
  d0:	08 95       	ret

000000d2 <__vector_14>:
  d2:	1f 92       	push	r1
  d4:	0f 92       	push	r0
  d6:	0f b6       	in	r0, 0x3f	; 63
  d8:	0f 92       	push	r0
  da:	11 24       	eor	r1, r1
  dc:	8f 93       	push	r24
  de:	9f 93       	push	r25
  e0:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <contor_sec_1>
  e4:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <contor_sec_1+0x1>
  e8:	01 97       	sbiw	r24, 0x01	; 1
  ea:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <contor_sec_1+0x1>
  ee:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <contor_sec_1>
  f2:	89 2b       	or	r24, r25
  f4:	61 f4       	brne	.+24     	; 0x10e <__vector_14+0x3c>
  f6:	81 e0       	ldi	r24, 0x01	; 1
  f8:	90 e0       	ldi	r25, 0x00	; 0
  fa:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <flag1+0x1>
  fe:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <flag1>
 102:	88 ee       	ldi	r24, 0xE8	; 232
 104:	93 e0       	ldi	r25, 0x03	; 3
 106:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <contor_sec_1+0x1>
 10a:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <contor_sec_1>
 10e:	9f 91       	pop	r25
 110:	8f 91       	pop	r24
 112:	0f 90       	pop	r0
 114:	0f be       	out	0x3f, r0	; 63
 116:	0f 90       	pop	r0
 118:	1f 90       	pop	r1
 11a:	18 95       	reti

0000011c <lcd_command>:
 11c:	9b b1       	in	r25, 0x0b	; 11
 11e:	9f 70       	andi	r25, 0x0F	; 15
 120:	28 2f       	mov	r18, r24
 122:	20 7f       	andi	r18, 0xF0	; 240
 124:	92 2b       	or	r25, r18
 126:	9b b9       	out	0x0b, r25	; 11
 128:	9b b1       	in	r25, 0x0b	; 11
 12a:	9e 7f       	andi	r25, 0xFE	; 254
 12c:	9b b9       	out	0x0b, r25	; 11
 12e:	9b b1       	in	r25, 0x0b	; 11
 130:	92 60       	ori	r25, 0x02	; 2
 132:	9b b9       	out	0x0b, r25	; 11
 134:	35 e0       	ldi	r19, 0x05	; 5
 136:	3a 95       	dec	r19
 138:	f1 f7       	brne	.-4      	; 0x136 <lcd_command+0x1a>
 13a:	00 00       	nop
 13c:	9b b1       	in	r25, 0x0b	; 11
 13e:	9e 7f       	andi	r25, 0xFE	; 254
 140:	9b b9       	out	0x0b, r25	; 11
 142:	ef e1       	ldi	r30, 0x1F	; 31
 144:	f3 e0       	ldi	r31, 0x03	; 3
 146:	31 97       	sbiw	r30, 0x01	; 1
 148:	f1 f7       	brne	.-4      	; 0x146 <lcd_command+0x2a>
 14a:	00 c0       	rjmp	.+0      	; 0x14c <lcd_command+0x30>
 14c:	00 00       	nop
 14e:	2b b1       	in	r18, 0x0b	; 11
 150:	f0 e1       	ldi	r31, 0x10	; 16
 152:	8f 9f       	mul	r24, r31
 154:	c0 01       	movw	r24, r0
 156:	11 24       	eor	r1, r1
 158:	92 2f       	mov	r25, r18
 15a:	9f 70       	andi	r25, 0x0F	; 15
 15c:	89 2b       	or	r24, r25
 15e:	8b b9       	out	0x0b, r24	; 11
 160:	8b b1       	in	r24, 0x0b	; 11
 162:	82 60       	ori	r24, 0x02	; 2
 164:	8b b9       	out	0x0b, r24	; 11
 166:	35 e0       	ldi	r19, 0x05	; 5
 168:	3a 95       	dec	r19
 16a:	f1 f7       	brne	.-4      	; 0x168 <lcd_command+0x4c>
 16c:	00 00       	nop
 16e:	8b b1       	in	r24, 0x0b	; 11
 170:	8d 7f       	andi	r24, 0xFD	; 253
 172:	8b b9       	out	0x0b, r24	; 11
 174:	8f e3       	ldi	r24, 0x3F	; 63
 176:	9f e1       	ldi	r25, 0x1F	; 31
 178:	01 97       	sbiw	r24, 0x01	; 1
 17a:	f1 f7       	brne	.-4      	; 0x178 <lcd_command+0x5c>
 17c:	00 c0       	rjmp	.+0      	; 0x17e <lcd_command+0x62>
 17e:	00 00       	nop
 180:	08 95       	ret

00000182 <initialize>:
 182:	8f ef       	ldi	r24, 0xFF	; 255
 184:	8a b9       	out	0x0a, r24	; 10
 186:	8f e5       	ldi	r24, 0x5F	; 95
 188:	9a ee       	ldi	r25, 0xEA	; 234
 18a:	01 97       	sbiw	r24, 0x01	; 1
 18c:	f1 f7       	brne	.-4      	; 0x18a <initialize+0x8>
 18e:	00 c0       	rjmp	.+0      	; 0x190 <initialize+0xe>
 190:	00 00       	nop
 192:	80 e3       	ldi	r24, 0x30	; 48
 194:	0e 94 8e 00 	call	0x11c	; 0x11c <lcd_command>
 198:	8f e1       	ldi	r24, 0x1F	; 31
 19a:	9e e4       	ldi	r25, 0x4E	; 78
 19c:	01 97       	sbiw	r24, 0x01	; 1
 19e:	f1 f7       	brne	.-4      	; 0x19c <initialize+0x1a>
 1a0:	00 c0       	rjmp	.+0      	; 0x1a2 <initialize+0x20>
 1a2:	00 00       	nop
 1a4:	80 e3       	ldi	r24, 0x30	; 48
 1a6:	0e 94 8e 00 	call	0x11c	; 0x11c <lcd_command>
 1aa:	87 e5       	ldi	r24, 0x57	; 87
 1ac:	92 e0       	ldi	r25, 0x02	; 2
 1ae:	01 97       	sbiw	r24, 0x01	; 1
 1b0:	f1 f7       	brne	.-4      	; 0x1ae <initialize+0x2c>
 1b2:	00 c0       	rjmp	.+0      	; 0x1b4 <initialize+0x32>
 1b4:	00 00       	nop
 1b6:	80 e3       	ldi	r24, 0x30	; 48
 1b8:	0e 94 8e 00 	call	0x11c	; 0x11c <lcd_command>
 1bc:	82 e0       	ldi	r24, 0x02	; 2
 1be:	0e 94 8e 00 	call	0x11c	; 0x11c <lcd_command>
 1c2:	88 e2       	ldi	r24, 0x28	; 40
 1c4:	0e 94 8e 00 	call	0x11c	; 0x11c <lcd_command>
 1c8:	81 e0       	ldi	r24, 0x01	; 1
 1ca:	0e 94 8e 00 	call	0x11c	; 0x11c <lcd_command>
 1ce:	88 e0       	ldi	r24, 0x08	; 8
 1d0:	0e 94 8e 00 	call	0x11c	; 0x11c <lcd_command>
 1d4:	8f e3       	ldi	r24, 0x3F	; 63
 1d6:	9f e1       	ldi	r25, 0x1F	; 31
 1d8:	01 97       	sbiw	r24, 0x01	; 1
 1da:	f1 f7       	brne	.-4      	; 0x1d8 <initialize+0x56>
 1dc:	00 c0       	rjmp	.+0      	; 0x1de <initialize+0x5c>
 1de:	00 00       	nop
 1e0:	08 95       	ret

000001e2 <pinToggle>:
 1e2:	fc 01       	movw	r30, r24
 1e4:	40 81       	ld	r20, Z
 1e6:	21 e0       	ldi	r18, 0x01	; 1
 1e8:	30 e0       	ldi	r19, 0x00	; 0
 1ea:	02 c0       	rjmp	.+4      	; 0x1f0 <pinToggle+0xe>
 1ec:	22 0f       	add	r18, r18
 1ee:	33 1f       	adc	r19, r19
 1f0:	6a 95       	dec	r22
 1f2:	e2 f7       	brpl	.-8      	; 0x1ec <pinToggle+0xa>
 1f4:	24 27       	eor	r18, r20
 1f6:	20 83       	st	Z, r18
 1f8:	08 95       	ret

000001fa <aprinde_led_1>:
 1fa:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <flag1>
 1fe:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <flag1+0x1>
 202:	01 97       	sbiw	r24, 0x01	; 1
 204:	49 f4       	brne	.+18     	; 0x218 <aprinde_led_1+0x1e>
 206:	66 e0       	ldi	r22, 0x06	; 6
 208:	8b e2       	ldi	r24, 0x2B	; 43
 20a:	90 e0       	ldi	r25, 0x00	; 0
 20c:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <pinToggle>
 210:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <flag1+0x1>
 214:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <flag1>
 218:	08 95       	ret

0000021a <timer0_init>:
 21a:	84 b5       	in	r24, 0x24	; 36
 21c:	82 60       	ori	r24, 0x02	; 2
 21e:	84 bd       	out	0x24, r24	; 36
 220:	85 b5       	in	r24, 0x25	; 37
 222:	83 60       	ori	r24, 0x03	; 3
 224:	85 bd       	out	0x25, r24	; 37
 226:	89 ef       	ldi	r24, 0xF9	; 249
 228:	87 bd       	out	0x27, r24	; 39
 22a:	ee e6       	ldi	r30, 0x6E	; 110
 22c:	f0 e0       	ldi	r31, 0x00	; 0
 22e:	80 81       	ld	r24, Z
 230:	82 60       	ori	r24, 0x02	; 2
 232:	80 83       	st	Z, r24
 234:	08 95       	ret

00000236 <init_timer>:
 236:	f8 94       	cli
 238:	0e 94 0d 01 	call	0x21a	; 0x21a <timer0_init>
 23c:	78 94       	sei
 23e:	08 95       	ret

00000240 <_exit>:
 240:	f8 94       	cli

00000242 <__stop_program>:
 242:	ff cf       	rjmp	.-2      	; 0x242 <__stop_program>
